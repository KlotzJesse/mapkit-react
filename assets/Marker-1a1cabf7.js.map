{"version":3,"file":"Marker-1a1cabf7.js","sources":["../../src/components/Marker.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport MapContext from '../context/MapContext';\nimport { FeatureVisibility, toMapKitFeatureVisibility } from '../util/parameters';\nimport MarkerProps from './MarkerProps';\n\nexport default function Marker({\n  latitude,\n  longitude,\n\n  title = '',\n  subtitle = '',\n  accessibilityLabel = null,\n  subtitleVisibility = FeatureVisibility.Adaptive,\n  titleVisibility = FeatureVisibility.Adaptive,\n  clusteringIdentifier = null,\n  color = '#ff5b40',\n  glyphColor = 'white',\n\n  glyphText = '',\n  glyphImage = null,\n  selectedGlyphImage = undefined,\n\n  selected = undefined,\n  animates = true,\n  appearanceAnimation = '',\n  draggable = false,\n  enabled = true,\n  onSelect = undefined,\n  onDeselect = undefined,\n  onDragStart = undefined,\n  onDragEnd = undefined,\n}: MarkerProps) {\n  const [marker, setMarker] = useState<mapkit.MarkerAnnotation | null>(null);\n  const map = useContext(MapContext);\n\n  // Coordinates\n  useEffect(() => {\n    if (map === null) return undefined;\n\n    const m = new mapkit.MarkerAnnotation(\n      new mapkit.Coordinate(latitude, longitude),\n    );\n    map.addAnnotation(m);\n    setMarker(m);\n\n    return () => {\n      map.removeAnnotation(m);\n    };\n  }, [map, latitude, longitude]);\n\n  // Enum properties\n  useEffect(() => {\n    if (!marker) return;\n    marker.subtitleVisibility = toMapKitFeatureVisibility(subtitleVisibility);\n  }, [marker, subtitleVisibility]);\n  useEffect(() => {\n    if (!marker) return;\n    marker.titleVisibility = toMapKitFeatureVisibility(titleVisibility);\n  }, [marker, titleVisibility]);\n\n  // Simple values properties\n  const properties = {\n    title,\n    subtitle,\n    accessibilityLabel,\n\n    color,\n    glyphColor,\n\n    glyphText,\n    glyphImage,\n    selectedGlyphImage,\n    clusteringIdentifier,\n    selected,\n    animates,\n    appearanceAnimation,\n    draggable,\n    enabled,\n  };\n  Object.entries(properties).forEach(([propertyName, prop]) => {\n    useEffect(() => {\n      if (!marker) return;\n      // @ts-ignore\n      marker[propertyName] = prop;\n    }, [marker, prop]);\n  });\n\n  // Events\n  const events = [\n    { name: 'select', handler: onSelect },\n    { name: 'deselect', handler: onDeselect },\n    { name: 'drag-start', handler: onDragStart },\n  ] as const;\n  events.forEach(({ name, handler }) => {\n    useEffect(() => {\n      if (!marker || !handler) return undefined;\n\n      const handlerWithoutParameters = () => handler();\n\n      marker.addEventListener(name, handlerWithoutParameters);\n      return () => marker.removeEventListener(name, handlerWithoutParameters);\n    }, [marker, handler]);\n  });\n  useEffect(() => {\n    if (!marker || !onDragEnd) return undefined;\n\n    const parametrizedHandler = () => onDragEnd({\n      latitude: marker.coordinate.latitude,\n      longitude: marker.coordinate.longitude,\n    });\n\n    marker.addEventListener('drag-end', parametrizedHandler);\n    return () => marker.removeEventListener('drag-end', parametrizedHandler);\n  }, [marker, onDragEnd]);\n\n  return null;\n}\n"],"names":["Marker","latitude","longitude","title","subtitle","accessibilityLabel","subtitleVisibility","FeatureVisibility","titleVisibility","clusteringIdentifier","color","glyphColor","glyphText","glyphImage","selectedGlyphImage","selected","animates","appearanceAnimation","draggable","enabled","onSelect","onDeselect","onDragStart","onDragEnd","marker","setMarker","useState","map","useContext","MapContext","useEffect","m","toMapKitFeatureVisibility","propertyName","prop","name","handler","handlerWithoutParameters","parametrizedHandler"],"mappings":"4FAKA,SAAAA,EAAA,CAA+B,SAAAC,EAC7B,UAAAC,EACA,MAAAC,EAAA,GAEQ,SAAAC,EAAA,GACG,mBAAAC,EAAA,KACU,mBAAAC,EAAAC,EAAA,SACkB,gBAAAC,EAAAD,EAAA,SACH,qBAAAE,EAAA,KACb,MAAAC,EAAA,UACf,WAAAC,EAAA,QACK,UAAAC,EAAA,GAED,WAAAC,EAAA,KACC,mBAAAC,EAAA,OACQ,SAAAC,EAAA,OAEV,SAAAC,EAAA,GACA,oBAAAC,EAAA,GACW,UAAAC,EAAA,GACV,QAAAC,EAAA,GACF,SAAAC,EAAA,OACC,WAAAC,EAAA,OACE,YAAAC,EAAA,OACC,UAAAC,EAAA,MAEhB,EAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,IAAA,EACAC,EAAAC,aAAAC,CAAA,EAGAC,OAAAA,EAAAA,UAAA,IAAA,CACE,GAAAH,IAAA,KAAkB,OAElB,MAAAI,EAAA,IAAA,OAAA,iBAAqB,IAAA,OAAA,WAAA9B,EAAAC,CAAA,CACsB,EAE3C,OAAAyB,EAAA,cAAAI,CAAA,EACAN,EAAAM,CAAA,EAEA,IAAA,CACEJ,EAAA,iBAAAI,CAAA,CAAsB,CACxB,EAAA,CAAAJ,EAAA1B,EAAAC,CAAA,CAAA,EAIF4B,EAAAA,UAAA,IAAA,CACEN,IACAA,EAAA,mBAAAQ,EAAA1B,CAAA,EAAwE,EAAA,CAAAkB,EAAAlB,CAAA,CAAA,EAE1EwB,EAAAA,UAAA,IAAA,CACEN,IACAA,EAAA,gBAAAQ,EAAAxB,CAAA,EAAkE,EAAA,CAAAgB,EAAAhB,CAAA,CAAA,EAsBpE,OAAA,QAlBA,CAAmB,MAAAL,EACjB,SAAAC,EACA,mBAAAC,EACA,MAAAK,EAEA,WAAAC,EACA,UAAAC,EAEA,WAAAC,EACA,mBAAAC,EACA,qBAAAL,EACA,SAAAM,EACA,SAAAC,EACA,oBAAAC,EACA,UAAAC,EACA,QAAAC,CACA,CAEF,EAAA,QAAA,CAAA,CAAAc,EAAAC,CAAA,IAAA,CACEJ,EAAAA,UAAA,IAAA,CACEN,IAEAA,EAAAS,GAAAC,EAAuB,EAAA,CAAAV,EAAAU,CAAA,CAAA,CACR,CAAA,EAInB,CAAe,CAAA,KAAA,SAAA,QAAAd,CAAA,EACuB,CAAA,KAAA,WAAA,QAAAC,CAAA,EACI,CAAA,KAAA,aAAA,QAAAC,CAAA,CACG,EAE7C,QAAA,CAAA,CAAA,KAAAa,EAAA,QAAAC,CAAA,IAAA,CACEN,EAAAA,UAAA,IAAA,CACE,GAAA,CAAAN,GAAA,CAAAY,EAAyB,OAEzB,MAAAC,EAAA,IAAAD,IAEA,OAAAZ,EAAA,iBAAAW,EAAAE,CAAA,EACA,IAAAb,EAAA,oBAAAW,EAAAE,CAAA,CAAsE,EAAA,CAAAb,EAAAY,CAAA,CAAA,CACpD,CAAA,EAEtBN,EAAAA,UAAA,IAAA,CACE,GAAA,CAAAN,GAAA,CAAAD,EAA2B,OAE3B,MAAAe,EAAA,IAAAf,EAAA,CAA4C,SAAAC,EAAA,WAAA,SACd,UAAAA,EAAA,WAAA,SACC,CAAA,EAG/B,OAAAA,EAAA,iBAAA,WAAAc,CAAA,EACA,IAAAd,EAAA,oBAAA,WAAAc,CAAA,CAAuE,EAAA,CAAAd,EAAAD,CAAA,CAAA,EAGzE,IACF;;;;;;;;;;;;;;;;;;"}