{"version":3,"file":"Map-700fab0a.js","sources":["../../node_modules/usehooks-ts/dist/esm/useCopyToClipboard/useCopyToClipboard.js","../../node_modules/usehooks-ts/dist/esm/useFetch/useFetch.js","../../node_modules/usehooks-ts/dist/esm/useMediaQuery/useMediaQuery.js","../../src/context/MapContext.ts","../../src/util/loader.ts","../../src/util/parameters.ts","../../src/util/forwardMapkitEvent.ts","../../src/components/Map.tsx"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useState } from 'react';\nfunction useCopyToClipboard() {\n    const [copiedText, setCopiedText] = useState(null);\n    const copy = (text) => __awaiter(this, void 0, void 0, function* () {\n        if (!(navigator === null || navigator === void 0 ? void 0 : navigator.clipboard)) {\n            console.warn('Clipboard not supported');\n            return false;\n        }\n        try {\n            yield navigator.clipboard.writeText(text);\n            setCopiedText(text);\n            return true;\n        }\n        catch (error) {\n            console.warn('Copy failed', error);\n            setCopiedText(null);\n            return false;\n        }\n    });\n    return [copiedText, copy];\n}\nexport default useCopyToClipboard;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useEffect, useReducer, useRef } from 'react';\nfunction useFetch(url, options) {\n    const cache = useRef({});\n    const cancelRequest = useRef(false);\n    const initialState = {\n        error: undefined,\n        data: undefined,\n    };\n    const fetchReducer = (state, action) => {\n        switch (action.type) {\n            case 'loading':\n                return Object.assign({}, initialState);\n            case 'fetched':\n                return Object.assign(Object.assign({}, initialState), { data: action.payload });\n            case 'error':\n                return Object.assign(Object.assign({}, initialState), { error: action.payload });\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\n    useEffect(() => {\n        if (!url)\n            return;\n        cancelRequest.current = false;\n        const fetchData = () => __awaiter(this, void 0, void 0, function* () {\n            dispatch({ type: 'loading' });\n            if (cache.current[url]) {\n                dispatch({ type: 'fetched', payload: cache.current[url] });\n                return;\n            }\n            try {\n                const response = yield fetch(url, options);\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                const data = (yield response.json());\n                cache.current[url] = data;\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'fetched', payload: data });\n            }\n            catch (error) {\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'error', payload: error });\n            }\n        });\n        void fetchData();\n        return () => {\n            cancelRequest.current = true;\n        };\n    }, [url]);\n    return state;\n}\nexport default useFetch;\n","import { useEffect, useState } from 'react';\nfunction useMediaQuery(query) {\n    const getMatches = (query) => {\n        if (typeof window !== 'undefined') {\n            return window.matchMedia(query).matches;\n        }\n        return false;\n    };\n    const [matches, setMatches] = useState(getMatches(query));\n    function handleChange() {\n        setMatches(getMatches(query));\n    }\n    useEffect(() => {\n        const matchMedia = window.matchMedia(query);\n        handleChange();\n        if (matchMedia.addListener) {\n            matchMedia.addListener(handleChange);\n        }\n        else {\n            matchMedia.addEventListener('change', handleChange);\n        }\n        return () => {\n            if (matchMedia.removeListener) {\n                matchMedia.removeListener(handleChange);\n            }\n            else {\n                matchMedia.removeEventListener('change', handleChange);\n            }\n        };\n    }, [query]);\n    return matches;\n}\nexport default useMediaQuery;\n","import React from 'react';\n\nexport default React.createContext<mapkit.Map | null>(null);\n","let loadingPromise: Promise<void> | null = null;\n\n/**\n * Loads the MapKit JS API with the given token.\n *\n * If the library is already loaded or loading, this function will not attempt\n * to load it a second time.\n *\n * @param token The MapKit JS token\n * @returns A promise resolving when the library is loaded.\n */\nexport default function load(token: string): Promise<void> {\n  if (loadingPromise !== null) {\n    return loadingPromise;\n  }\n\n  loadingPromise = new Promise((resolve) => {\n    const script = document.createElement('script');\n    script.addEventListener('load', () => {\n      mapkit.init({\n        authorizationCallback: (done) => done(token),\n      });\n\n      resolve();\n    }, { once: true });\n    script.src = 'https://cdn.apple-mapkit.com/mk/5.x.x/mapkit.js';\n    script.crossOrigin = 'anonymous';\n    document.head.appendChild(script);\n  });\n  return loadingPromise;\n}\n","/**\n * Color schemes of the map.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/map/colorschemes}\n */\nexport enum ColorScheme { Light, Dark, Auto }\n\n/**\n * Converts a mapkit-react color scheme value to a MapKit JS color scheme value.\n * Must be called after MapKit JS is loaded.\n * @param colorScheme The mapkit-react color scheme value (ColorScheme.Dark / ColorScheme.Light)\n * or ColorScheme.Auto for dynamic color based on the color preference of the user\n * @param isDarkMode The userâ€™s color preference (used for ColorScheme.Auto)\n * @returns The MapKit JS color scheme value\n */\nexport function toMapKitColorScheme(colorScheme: ColorScheme, isDarkMode: boolean): string {\n  switch (colorScheme) {\n    case ColorScheme.Dark:\n      return mapkit.Map.ColorSchemes.Dark;\n    case ColorScheme.Light:\n      return mapkit.Map.ColorSchemes.Light;\n    case ColorScheme.Auto:\n      return isDarkMode\n        ? mapkit.Map.ColorSchemes.Dark\n        : mapkit.Map.ColorSchemes.Light;\n    default:\n      throw new RangeError('Invalid color scheme');\n  }\n}\n\n/**\n * Types of map to display.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes}\n */\nexport enum MapType {\n  /**\n   * A street map that shows the position of all roads and some road names.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes/standard}\n   */\n  Standard,\n\n  /**\n   * A street map where your data is emphasized over the underlying map details.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes/mutedstandard}\n   */\n  MutedStandard,\n\n  /**\n   * A satellite image of the area with road and road name information\n   * layered on top.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes/hybrid}\n   */\n  Hybrid,\n\n  /**\n   * A satellite image of the area.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes/satellite}\n   */\n  Satellite,\n}\n\n/**\n * Converts a mapkit-react map type value to a MapKit JS map type value.\n * Must be called after MapKit JS is loaded.\n * @param mapType The mapkit-react map type value\n * @returns The MapKit JS map type value\n */\nexport function toMapKitMapType(mapType: MapType): string {\n  switch (mapType) {\n    case MapType.Standard:\n      return mapkit.Map.MapTypes.Standard;\n    case MapType.MutedStandard:\n      return mapkit.Map.MapTypes.MutedStandard;\n    case MapType.Hybrid:\n      return mapkit.Map.MapTypes.Hybrid;\n    case MapType.Satellite:\n      return mapkit.Map.MapTypes.Satellite;\n    default:\n      throw new RangeError('Invalid map type');\n  }\n}\n\n/**\n * Converts a MapKit JS region value to a mapkit-react region value.\n * @param region The MapKit JS region value\n * @returns The mapkit-react region value\n */\nexport function fromMapKitRegion(region: mapkit.CoordinateRegion): CoordinateRegion {\n  return {\n    centerLatitude: region.center.latitude,\n    centerLongitude: region.center.longitude,\n    latitudeDelta: region.span.latitudeDelta,\n    longitudeDelta: region.span.longitudeDelta,\n  };\n}\n\n/**\n * Converts a MapKit JS map type value to a mapkit-react map type value.\n * Must be called after MapKit JS is loaded.\n * @param mapType The MapKit JS map type value\n * @returns The mapkit-react map type value\n */\nexport function fromMapKitMapType(mapType: string): MapType {\n  switch (mapType) {\n    case mapkit.Map.MapTypes.Standard:\n      return MapType.Standard;\n    case mapkit.Map.MapTypes.MutedStandard:\n      return MapType.MutedStandard;\n    case mapkit.Map.MapTypes.Hybrid:\n      return MapType.Hybrid;\n    case mapkit.Map.MapTypes.Satellite:\n      return MapType.Satellite;\n    default:\n      throw new RangeError('Invalid map type');\n  }\n}\n\n/**\n * System of measurement that displays on the map.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/map/distances}\n */\nexport enum Distances {\n  /**\n   * The measurement system is adaptive, and determined based on the map's language.\n   */\n  Adaptive,\n  Metric,\n  Imperial,\n}\n\n/**\n * Converts a mapkit-react map distances to a MapKit JS map distances.\n * Must be called after MapKit JS is loaded.\n * @param distances The mapkit-react map distances\n * @returns The MapKit JS map distances\n */\nexport function toMapKitDistances(distances: Distances): string {\n  switch (distances) {\n    case Distances.Adaptive:\n      return mapkit.Map.Distances.Adaptive;\n    case Distances.Metric:\n      return mapkit.Map.Distances.Metric;\n    case Distances.Imperial:\n      return mapkit.Map.Distances.Imperial;\n    default:\n      throw new RangeError('Invalid distances value');\n  }\n}\n\n/**\n * A value MapKit JS uses for prioritizing the visibility of specific map features\n * before the underlaying map tiles.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/mapconstructoroptions/4096368-loadpriority}\n */\nexport enum LoadPriority {\n  /**\n   * Prioritizes loading of the map land cover and borders, without POIs or labels.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/loadpriorities/landcover}\n   */\n  LandCover,\n\n  /**\n   * Prioritizes loading of the full standard map, with rendered POIs.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/loadpriorities/pointsofinterest}\n   */\n  PointsOfInterest,\n\n  /**\n   * Signifies no preferences over what to prioritize when loading the map.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/loadpriorities/none}\n   */\n  None,\n}\n\n/**\n * Converts a mapkit-react load priority to a MapKit JS load priority.\n * Must be called after MapKit JS is loaded.\n * @param mapPriority The mapkit-react load priority\n * @returns The MapKit JS load priority\n */\nexport function toMapKitLoadPriority(loadPriority: LoadPriority): string | null {\n  switch (loadPriority) {\n    case LoadPriority.LandCover:\n      // @ts-ignore\n      return mapkit.Map.LoadPriorities.LandCover;\n    case LoadPriority.PointsOfInterest:\n      // @ts-ignore\n      return mapkit.Map.LoadPriorities.PointsOfInterest;\n    case LoadPriority.None:\n      // @ts-ignore\n      return mapkit.Map.LoadPriorities.None;\n    default:\n      throw new RangeError('Invalid load priority');\n  }\n}\n\n/**\n * A value MapKit JS uses for prioritizing the visibility of specific annotations.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/annotationconstructoroptions/2991165-displaypriority}\n */\nexport enum DisplayPriority {\n  Low = 'low',\n  High = 'high',\n  Required = 'required',\n}\n\n/**\n * Converts a mapkit-react display priority to a MapKit JS display priority.\n * Must be called after MapKit JS is loaded.\n * @param displayPriority The mapkit-react display priority or a number 0 to 1000\n * @returns The MapKit JS display priority\n */\nexport function toMapKitDisplayPriority(displayPriority: DisplayPriority | number): number | null {\n  if (typeof displayPriority === 'number') {\n    if (displayPriority < 0 || displayPriority > 1000) {\n      throw new RangeError('Display priority is out of range (0 to 1000)');\n    } else {\n      return displayPriority;\n    }\n  }\n\n  switch (displayPriority) {\n    case DisplayPriority.Low:\n      // @ts-ignore\n      return mapkit.Annotation.DisplayPriority.Low;\n    case DisplayPriority.High:\n      // @ts-ignore\n      return mapkit.Annotation.DisplayPriority.High;\n    case DisplayPriority.Required:\n      // @ts-ignore\n      return mapkit.Annotation.DisplayPriority.Required;\n    default:\n      throw new RangeError('Invalid display priority');\n  }\n}\n\n/**\n * Constants indicating the visibility of different adaptive map features.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/featurevisibility}\n */\nexport enum FeatureVisibility {\n  /**\n   * A constant indicating that the feature is always hidden.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/featurevisibility/hidden}\n   */\n  Hidden,\n\n  /**\n   * A constant indicating that the feature is always visible.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/featurevisibility/visible}\n   */\n  Visible,\n\n  /**\n   * A constant indicating that feature visibility adapts to the current map state.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/featurevisibility/adaptive}\n   */\n  Adaptive,\n}\n\n/**\n * Converts a mapkit-react visibility to a MapKit JS visibility.\n * Must be called after MapKit JS is loaded.\n * @param featureVisibility The mapkit-react visibility\n * @returns The MapKit JS visibility\n */\nexport function toMapKitFeatureVisibility(featureVisibility: FeatureVisibility): string {\n  switch (featureVisibility) {\n    case FeatureVisibility.Adaptive:\n      return mapkit.FeatureVisibility.Adaptive;\n    case FeatureVisibility.Visible:\n      return mapkit.FeatureVisibility.Visible;\n    case FeatureVisibility.Hidden:\n      return mapkit.FeatureVisibility.Hidden;\n    default:\n      throw new RangeError('Invalid feature visibility');\n  }\n}\n\n/**\n * Point-of-interest categories.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/mapkit/pointofinterestcategory}\n */\nexport enum PointOfInterestCategory {\n  Airport, AmusementPark, Aquarium, ATM, Bakery, Bank, Beach, Brewery, Cafe,\n  Campground, CarRental, EVCharger, FireStation, FitnessCenter, FoodMarket,\n  GasStation, Hospital, Hotel, Laundry, Library, Marina, MovieTheater, Museum,\n  NationalPark, Nightlife, Park, Parking, Pharmacy, Police, PostOffice,\n  PublicTransport, Restaurant, Restroom, School, Stadium, Store, Theater,\n  University, Winery, Zoo,\n}\n\n/**\n * Converts a mapkit-react POI category value to a MapKit JS POI category value.\n * Must be called after MapKit JS is loaded.\n * @param category The mapkit-react point of interest category value\n * @returns The MapKit JS point of interest category value\n */\nexport function toMapKitPOICategory(category: PointOfInterestCategory):\nmapkit.PointOfInterestCategory {\n  switch (category) {\n    case PointOfInterestCategory.Airport:\n      return mapkit.PointOfInterestCategory.Airport;\n    case PointOfInterestCategory.AmusementPark:\n      return mapkit.PointOfInterestCategory.AmusementPark;\n    case PointOfInterestCategory.Aquarium:\n      return mapkit.PointOfInterestCategory.Aquarium;\n    case PointOfInterestCategory.ATM:\n      return mapkit.PointOfInterestCategory.ATM;\n    case PointOfInterestCategory.Bakery:\n      return mapkit.PointOfInterestCategory.Bakery;\n    case PointOfInterestCategory.Bank:\n      return mapkit.PointOfInterestCategory.Bank;\n    case PointOfInterestCategory.Beach:\n      return mapkit.PointOfInterestCategory.Beach;\n    case PointOfInterestCategory.Brewery:\n      return mapkit.PointOfInterestCategory.Brewery;\n    case PointOfInterestCategory.Cafe:\n      return mapkit.PointOfInterestCategory.Cafe;\n    case PointOfInterestCategory.Campground:\n      return mapkit.PointOfInterestCategory.Campground;\n    case PointOfInterestCategory.CarRental:\n      return mapkit.PointOfInterestCategory.CarRental;\n    case PointOfInterestCategory.EVCharger:\n      return mapkit.PointOfInterestCategory.EVCharger;\n    case PointOfInterestCategory.FireStation:\n      return mapkit.PointOfInterestCategory.FireStation;\n    case PointOfInterestCategory.FitnessCenter:\n      return mapkit.PointOfInterestCategory.FitnessCenter;\n    case PointOfInterestCategory.FoodMarket:\n      return mapkit.PointOfInterestCategory.FoodMarket;\n    case PointOfInterestCategory.GasStation:\n      return mapkit.PointOfInterestCategory.GasStation;\n    case PointOfInterestCategory.Hospital:\n      return mapkit.PointOfInterestCategory.Hospital;\n    case PointOfInterestCategory.Hotel:\n      return mapkit.PointOfInterestCategory.Hotel;\n    case PointOfInterestCategory.Laundry:\n      return mapkit.PointOfInterestCategory.Laundry;\n    case PointOfInterestCategory.Library:\n      return mapkit.PointOfInterestCategory.Library;\n    case PointOfInterestCategory.Marina:\n      return mapkit.PointOfInterestCategory.Marina;\n    case PointOfInterestCategory.MovieTheater:\n      return mapkit.PointOfInterestCategory.MovieTheater;\n    case PointOfInterestCategory.Museum:\n      return mapkit.PointOfInterestCategory.Museum;\n    case PointOfInterestCategory.NationalPark:\n      return mapkit.PointOfInterestCategory.NationalPark;\n    case PointOfInterestCategory.Nightlife:\n      return mapkit.PointOfInterestCategory.Nightlife;\n    case PointOfInterestCategory.Park:\n      return mapkit.PointOfInterestCategory.Park;\n    case PointOfInterestCategory.Parking:\n      return mapkit.PointOfInterestCategory.Parking;\n    case PointOfInterestCategory.Pharmacy:\n      return mapkit.PointOfInterestCategory.Pharmacy;\n    case PointOfInterestCategory.Police:\n      return mapkit.PointOfInterestCategory.Police;\n    case PointOfInterestCategory.PostOffice:\n      return mapkit.PointOfInterestCategory.PostOffice;\n    case PointOfInterestCategory.PublicTransport:\n      return mapkit.PointOfInterestCategory.PublicTransport;\n    case PointOfInterestCategory.Restaurant:\n      return mapkit.PointOfInterestCategory.Restaurant;\n    case PointOfInterestCategory.Restroom:\n      return mapkit.PointOfInterestCategory.Restroom;\n    case PointOfInterestCategory.School:\n      return mapkit.PointOfInterestCategory.School;\n    case PointOfInterestCategory.Stadium:\n      return mapkit.PointOfInterestCategory.Stadium;\n    case PointOfInterestCategory.Store:\n      return mapkit.PointOfInterestCategory.Store;\n    case PointOfInterestCategory.Theater:\n      return mapkit.PointOfInterestCategory.Theater;\n    case PointOfInterestCategory.University:\n      return mapkit.PointOfInterestCategory.University;\n    case PointOfInterestCategory.Winery:\n      return mapkit.PointOfInterestCategory.Winery;\n    case PointOfInterestCategory.Zoo:\n      return mapkit.PointOfInterestCategory.Zoo;\n    default:\n      throw new RangeError('Invalid point of interest category');\n  }\n}\n\n/**\n * A point on the Earthâ€™s surface.\n */\nexport interface Coordinate {\n  /**\n   * The latitude in degrees.\n   */\n  latitude: number;\n\n  /**\n   * The longitude in degrees.\n   */\n  longitude: number;\n}\n\n/**\n * A rectangular geographic region that centers around a latitude and longitude coordinate.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/mapkit/coordinateregion/2973861-mapkit_coordinateregion}\n */\nexport interface CoordinateRegion {\n  /**\n   * The latitude of the center point in degrees.\n   */\n  centerLatitude: number;\n\n  /**\n   * The longitude of the center point in degrees.\n   */\n  centerLongitude: number;\n\n  /**\n   * The amount of north-to-south distance (in degrees) to display for the map\n   * region. Unlike longitudinal distances, which vary based on the latitude,\n   * one degree of latitude is always approximately 111 km (69 mi.).\n   */\n  latitudeDelta: number;\n\n  /**\n   * The amount of east-to-west distance (in degrees) to display for the map\n   * region. The number of kilometers (or miles) that a longitude range spans\n   * varies based on the latitude. For example, one degree of longitude spans\n   * a distance of approximately 111 km (69 miles mi.) at the equator,\n   * approximately 88 km (or 55mi.) at 37Âº north latitude (the latitude of\n   * San Francisco), and shrinks to 0 km (0 mi.) at the poles.\n   */\n  longitudeDelta: number;\n}\n\n/**\n * Converts a mapkit-react coordinate region to a MapKit JS coordinate region.\n * Must be called after MapKit JS is loaded.\n * @param region The mapkit-react coordinate region\n * @returns The MapKit JS coordinate region\n */\nexport function toMapKitCoordinateRegion(region: CoordinateRegion) : mapkit.CoordinateRegion {\n  return new mapkit.CoordinateRegion(\n    new mapkit.Coordinate(region.centerLatitude, region.centerLongitude),\n    new mapkit.CoordinateSpan(region.latitudeDelta, region.longitudeDelta),\n  );\n}\n","import { useEffect } from 'react';\n\n/**\n * Forwards a given MapKit JS event to a mapkit-react event.\n * @param element The current map | marker | annotation instance\n * @param name The name of the MapKit JS event.\n * @param handler The event handler of the mapkit-react Map component\n * @param eventMap A function that transforms the parameter of the\n *                 MapKit JS event handler to a parameter for the\n *                 mapkit-react event handler.\n */\nexport default function forwardMapkitEvent<E>(\n  element: mapkit.Map | mapkit.Annotation | mapkit.MarkerAnnotation | null,\n  name: String,\n  handler: ((mapkitReactEvent: E) => void) | undefined,\n  eventMap: (mapkitEvent: any) => E,\n) {\n  useEffect(() => {\n    if (!element || !handler) return undefined;\n\n    // @ts-ignore\n    const mapkitHandler = (e) => {\n      handler(eventMap(e));\n    };\n\n    // @ts-ignore\n    element.addEventListener(name, mapkitHandler);\n    // @ts-ignore\n    return () => element.removeEventListener(name, mapkitHandler);\n  }, [element, handler]);\n}\n","import React, {\n  useState, useEffect, useRef, useImperativeHandle,\n} from 'react';\nimport { useMediaQuery } from 'usehooks-ts';\nimport MapContext from '../context/MapContext';\nimport load from '../util/loader';\nimport {\n  ColorScheme, Distances, FeatureVisibility, LoadPriority, MapType,\n  fromMapKitMapType,\n  toMapKitColorScheme, toMapKitCoordinateRegion, toMapKitDistances,\n  toMapKitLoadPriority, toMapKitMapType, toMapKitPOICategory,\n  toMapKitFeatureVisibility, fromMapKitRegion,\n} from '../util/parameters';\nimport MapProps from './MapProps';\nimport forwardMapkitEvent from '../util/forwardMapkitEvent';\n\nconst Map = React.forwardRef<mapkit.Map | null, React.PropsWithChildren<MapProps>>(({\n  children = undefined,\n\n  load: customLoad,\n  token,\n\n  colorScheme = ColorScheme.Light,\n  mapType = MapType.Standard,\n  distances = Distances.Adaptive,\n  loadPriority = LoadPriority.LandCover,\n\n  isRotationEnabled = true,\n  isScrollEnabled = true,\n  isZoomEnabled = true,\n  showsCompass = FeatureVisibility.Adaptive,\n  showsScale = FeatureVisibility.Hidden,\n  showsMapTypeControl = true,\n  showsZoomControl = true,\n  showsUserLocationControl = false,\n  showsPointsOfInterest = true,\n  showsUserLocation = false,\n  tracksUserLocation = false,\n  allowWheelToZoom = false,\n\n  includedPOICategories = undefined,\n  excludedPOICategories = undefined,\n\n  paddingTop = 0,\n  paddingRight = 0,\n  paddingBottom = 0,\n  paddingLeft = 0,\n\n  initialRegion = undefined,\n  cameraBoundary = undefined,\n  minCameraDistance = 0,\n  maxCameraDistance = Infinity,\n\n  onLoad = undefined,\n\n  onRegionChangeStart = undefined,\n  onRegionChangeEnd = undefined,\n  onMapTypeChange = undefined,\n\n  onSingleTap = undefined,\n  onDoubleTap = undefined,\n  onLongPress = undefined,\n\n  onUserLocationChange = undefined,\n  onUserLocationError = undefined,\n\n  onClick = undefined,\n  onMouseMove = undefined,\n  onMouseDown = undefined,\n  onMouseUp = undefined,\n}, mapRef) => {\n  const [map, setMap] = useState<mapkit.Map | null>(null);\n  const element = useRef<HTMLDivElement>(null);\n  const exists = useRef<boolean>(false);\n\n  // Load the map\n  useEffect(() => {\n    const loadMap = typeof customLoad === 'function' ? customLoad : load;\n    loadMap(token).then(() => {\n      if (exists.current) return;\n      const options = initialRegion\n        ? { region: toMapKitCoordinateRegion(initialRegion) }\n        : {};\n      setMap(new mapkit.Map(element.current!, options));\n      exists.current = true;\n    });\n\n    return () => {\n      if (map) {\n        map.destroy();\n        exists.current = false;\n      }\n    };\n  }, []);\n\n  // Fire the `onLoad` event\n  useEffect(() => {\n    if (map !== null) {\n      onLoad?.();\n    }\n  }, [map]);\n\n  // Expose the map using a forward ref\n  useImperativeHandle(mapRef, () => map!, [map]);\n\n  const isDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  // Enum properties\n  useEffect(() => {\n    if (!map) return;\n    map.colorScheme = toMapKitColorScheme(colorScheme, isDarkMode);\n  }, [map, colorScheme, isDarkMode]);\n  useEffect(() => {\n    if (!map) return;\n    map.mapType = toMapKitMapType(mapType);\n  }, [map, mapType]);\n  useEffect(() => {\n    if (!map) return;\n    map.distances = toMapKitDistances(distances);\n  }, [map, distances]);\n  useEffect(() => {\n    if (!map) return;\n    // @ts-ignore\n    map.loadPriority = toMapKitLoadPriority(loadPriority);\n  }, [map, loadPriority]);\n\n  // Simple values properties\n  const booleanProperties = {\n    isRotationEnabled,\n    isScrollEnabled,\n    isZoomEnabled,\n    showsMapTypeControl,\n    showsZoomControl,\n    showsUserLocationControl,\n    showsPointsOfInterest,\n    showsUserLocation,\n    tracksUserLocation,\n  };\n  Object.entries(booleanProperties).forEach(([propertyName, prop]) => {\n    useEffect(() => {\n      if (!map) return;\n      // @ts-ignore\n      map[propertyName] = prop;\n    }, [map, prop]);\n  });\n\n  // Feature visibility properties\n  const featureVisibilityProperties = {\n    showsCompass,\n    showsScale,\n  };\n  Object.entries(featureVisibilityProperties).forEach(([propertyName, prop]) => {\n    useEffect(() => {\n      if (!map) return;\n      // @ts-ignore\n      map[propertyName] = toMapKitFeatureVisibility(prop);\n    }, [map, prop]);\n  });\n\n  // Experimental feature\n  useEffect(() => {\n    if (!map) return;\n    try {\n      // @ts-ignore\n      // eslint-disable-next-line no-underscore-dangle\n      map._allowWheelToZoom = allowWheelToZoom;\n    } catch { /* ignore errors */ }\n  }, [map, allowWheelToZoom]);\n\n  // Padding\n  useEffect(() => {\n    if (!map) return;\n    map.padding = new mapkit.Padding(paddingTop, paddingRight, paddingBottom, paddingLeft);\n  }, [map, paddingTop, paddingRight, paddingBottom, paddingLeft]);\n\n  // Camera boundary\n  useEffect(() => {\n    if (!map) return;\n    // @ts-ignore\n    map.cameraBoundary = cameraBoundary ? toMapKitCoordinateRegion(cameraBoundary) : null;\n  }, [map, cameraBoundary]);\n\n  // Camera zoom range\n  useEffect(() => {\n    if (!map) return;\n    // @ts-ignore\n    map.cameraZoomRange = new mapkit.CameraZoomRange(minCameraDistance, maxCameraDistance);\n  }, [map, minCameraDistance, maxCameraDistance]);\n\n  // Point of interest filter\n  useEffect(() => {\n    if (!map) return;\n\n    if (includedPOICategories && excludedPOICategories) {\n      throw new Error('Canâ€™t specify both includedPOICategories and excludedPOICategories.');\n    } else if (includedPOICategories) {\n      map.pointOfInterestFilter = mapkit.PointOfInterestFilter.including(\n        includedPOICategories.map(toMapKitPOICategory),\n      );\n    } else if (excludedPOICategories) {\n      map.pointOfInterestFilter = mapkit.PointOfInterestFilter.excluding(\n        excludedPOICategories.map(toMapKitPOICategory),\n      );\n    } else {\n      // @ts-ignore\n      delete map.pointOfInterestFilter;\n    }\n  }, [map, includedPOICategories, excludedPOICategories]);\n\n  // MapKit JS events\n  const regionHandler = () => fromMapKitRegion(map!.region);\n  forwardMapkitEvent(map, 'region-change-start', onRegionChangeStart, regionHandler);\n  forwardMapkitEvent(map, 'region-change-end', onRegionChangeEnd, regionHandler);\n  forwardMapkitEvent(map, 'map-type-change', onMapTypeChange, () => fromMapKitMapType(map!.mapType));\n\n  type MapKitMapInteractionEvent = {\n    domEvents: Event[],\n    pointOnPage: DOMPoint,\n  };\n  const interactionEvent = ({ domEvents, pointOnPage }: MapKitMapInteractionEvent) => ({\n    domEvents,\n    pointOnPage,\n    toCoordinates: () => map!.convertPointOnPageToCoordinate(pointOnPage),\n  });\n  forwardMapkitEvent(map, 'single-tap', onSingleTap, interactionEvent);\n  forwardMapkitEvent(map, 'double-tap', onDoubleTap, interactionEvent);\n  forwardMapkitEvent(map, 'long-press', onLongPress, interactionEvent);\n\n  type MapKitUserLocationChangeEvent = {\n    coordinate: mapkit.Coordinate,\n    timestamp: Date,\n    floorLevel: number | undefined | null,\n  };\n  forwardMapkitEvent(map, 'user-location-change', onUserLocationChange, ({ coordinate: { latitude, longitude }, timestamp, floorLevel }: MapKitUserLocationChangeEvent) => ({\n    coordinate: { latitude, longitude },\n    timestamp,\n    floorLevel,\n  }));\n  type MapKitUserLocationErrorEvent = {\n    code: 1 | 2 | 3 | 4,\n    message: string,\n  };\n  forwardMapkitEvent(map, 'user-location-error', onUserLocationError, ({ code, message }: MapKitUserLocationErrorEvent) => ({ code, message }));\n\n  // Native JavaScript events\n  const domEvents = [\n    { name: 'click', handler: onClick },\n    { name: 'mousemove', handler: onMouseMove },\n    { name: 'mousedown', handler: onMouseDown },\n    { name: 'mouseup', handler: onMouseUp },\n  ] as const;\n  domEvents.forEach(({ name, handler }) => {\n    useEffect(() => {\n      if (!map || !handler) return undefined;\n\n      const listener = (e: MouseEvent) => {\n        handler({\n          domEvents: [e],\n          pointOnPage: { x: e.pageX, y: e.pageY },\n          toCoordinates() {\n            const { latitude, longitude }: mapkit.Coordinate = map\n              .convertPointOnPageToCoordinate(new DOMPoint(e.pageX, e.pageY));\n            return { latitude, longitude };\n          },\n        });\n      };\n\n      element.current?.addEventListener(name, listener);\n      return () => element.current?.removeEventListener(name, listener);\n    }, [map, handler]);\n  });\n\n  return (\n    <React.StrictMode>\n      <div style={{ width: '100%', height: '100%' }} ref={element}>\n        <MapContext.Provider value={map}>\n          {children}\n        </MapContext.Provider>\n      </div>\n    </React.StrictMode>\n  );\n});\nexport default Map;\n"],"names":["this","useMediaQuery","query","getMatches","matches","setMatches","useState","handleChange","useEffect","matchMedia","MapContext","React","loadingPromise","load","token","resolve","script","done","ColorScheme","ColorScheme2","toMapKitColorScheme","colorScheme","isDarkMode","MapType","MapType2","toMapKitMapType","mapType","fromMapKitRegion","region","fromMapKitMapType","Distances","Distances2","toMapKitDistances","distances","LoadPriority","LoadPriority2","toMapKitLoadPriority","loadPriority","toMapKitDisplayPriority","displayPriority","FeatureVisibility","FeatureVisibility2","toMapKitFeatureVisibility","featureVisibility","PointOfInterestCategory","PointOfInterestCategory2","toMapKitPOICategory","category","toMapKitCoordinateRegion","forwardMapkitEvent","element","name","handler","eventMap","mapkitHandler","e","Map","children","customLoad","isRotationEnabled","isScrollEnabled","isZoomEnabled","showsCompass","showsScale","showsMapTypeControl","showsZoomControl","showsUserLocationControl","showsPointsOfInterest","showsUserLocation","tracksUserLocation","allowWheelToZoom","includedPOICategories","excludedPOICategories","paddingTop","paddingRight","paddingBottom","paddingLeft","initialRegion","cameraBoundary","minCameraDistance","maxCameraDistance","onLoad","onRegionChangeStart","onRegionChangeEnd","onMapTypeChange","onSingleTap","onDoubleTap","onLongPress","onUserLocationChange","onUserLocationError","onClick","onMouseMove","onMouseDown","onMouseUp","mapRef","map","setMap","useRef","exists","options","useImperativeHandle","propertyName","prop","regionHandler","interactionEvent","domEvents2","pointOnPage","latitude","longitude","timestamp","floorLevel","code","message","listener","_a","jsx","Map$1"],"mappings":"6FAAiBA,YAAQA,WAAK,UCAbA,YAAQA,WAAK,UCC9B,SAASC,GAAcC,EAAO,CAC1B,MAAMC,EAAcD,GACZ,OAAO,OAAW,IACX,OAAO,WAAWA,CAAK,EAAE,QAE7B,GAEL,CAACE,EAASC,CAAU,EAAIC,EAAQ,SAACH,EAAWD,CAAK,CAAC,EACxD,SAASK,GAAe,CACpBF,EAAWF,EAAWD,CAAK,CAAC,CAC/B,CACDM,OAAAA,EAAAA,UAAU,IAAM,CACZ,MAAMC,EAAa,OAAO,WAAWP,CAAK,EAC1C,OAAAK,IACIE,EAAW,YACXA,EAAW,YAAYF,CAAY,EAGnCE,EAAW,iBAAiB,SAAUF,CAAY,EAE/C,IAAM,CACLE,EAAW,eACXA,EAAW,eAAeF,CAAY,EAGtCE,EAAW,oBAAoB,SAAUF,CAAY,CAErE,CACA,EAAO,CAACL,CAAK,CAAC,EACHE,CACX,CC7BA,MAAAM,GAAeC,EAAM,cAAiC,IAAI,ECF1D,IAAIC,EAAuC,KAW3C,SAAwBC,GAAKC,EAA8B,CACzD,OAAIF,IAAmB,OAINA,EAAA,IAAI,QAASG,GAAY,CAClC,MAAAC,EAAS,SAAS,cAAc,QAAQ,EACvCA,EAAA,iBAAiB,OAAQ,IAAM,CACpC,OAAO,KAAK,CACV,sBAAwBC,GAASA,EAAKH,CAAK,CAAA,CAC5C,EAEOC,GAAA,EACP,CAAE,KAAM,EAAA,CAAM,EACjBC,EAAO,IAAM,kDACbA,EAAO,YAAc,YACZ,SAAA,KAAK,YAAYA,CAAM,CAAA,CACjC,GACMJ,CACT,CC1BY,IAAAM,GAAAA,IAAcA,EAAAC,EAAA,MAAA,GAAA,QAAOD,EAAAC,EAAA,KAAA,GAAA,OAAMD,EAAAC,EAAA,KAAA,GAAA,OAA3BD,IAAAA,GAAA,CAAA,CAAA,EAUI,SAAAE,GAAoBC,EAA0BC,EAA6B,CACzF,OAAQD,EAAa,CACnB,IAAK,GACI,OAAA,OAAO,IAAI,aAAa,KACjC,IAAK,GACI,OAAA,OAAO,IAAI,aAAa,MACjC,IAAK,GACH,OAAOC,EACH,OAAO,IAAI,aAAa,KACxB,OAAO,IAAI,aAAa,MAC9B,QACQ,MAAA,IAAI,WAAW,sBAAsB,CAC/C,CACF,CAMY,IAAAC,GAAAA,IAKVA,EAAAC,EAAA,SAAA,GAAA,WAMAD,EAAAC,EAAA,cAAA,GAAA,gBAOAD,EAAAC,EAAA,OAAA,GAAA,SAMAD,EAAAC,EAAA,UAAA,GAAA,YAxBUD,IAAAA,GAAA,CAAA,CAAA,EAiCL,SAASE,GAAgBC,EAA0B,CACxD,OAAQA,EAAS,CACf,IAAK,GACI,OAAA,OAAO,IAAI,SAAS,SAC7B,IAAK,GACI,OAAA,OAAO,IAAI,SAAS,cAC7B,IAAK,GACI,OAAA,OAAO,IAAI,SAAS,OAC7B,IAAK,GACI,OAAA,OAAO,IAAI,SAAS,UAC7B,QACQ,MAAA,IAAI,WAAW,kBAAkB,CAC3C,CACF,CAOO,SAASC,GAAiBC,EAAmD,CAC3E,MAAA,CACL,eAAgBA,EAAO,OAAO,SAC9B,gBAAiBA,EAAO,OAAO,UAC/B,cAAeA,EAAO,KAAK,cAC3B,eAAgBA,EAAO,KAAK,cAAA,CAEhC,CAQO,SAASC,GAAkBH,EAA0B,CAC1D,OAAQA,EAAS,CACf,KAAK,OAAO,IAAI,SAAS,SAChB,MAAA,GACT,KAAK,OAAO,IAAI,SAAS,cAChB,MAAA,GACT,KAAK,OAAO,IAAI,SAAS,OAChB,MAAA,GACT,KAAK,OAAO,IAAI,SAAS,UAChB,MAAA,GACT,QACQ,MAAA,IAAI,WAAW,kBAAkB,CAC3C,CACF,CAMY,IAAAI,GAAAA,IAIVA,EAAAC,EAAA,SAAA,GAAA,WACAD,EAAAC,EAAA,OAAA,GAAA,SACAD,EAAAC,EAAA,SAAA,GAAA,WANUD,IAAAA,GAAA,CAAA,CAAA,EAeL,SAASE,GAAkBC,EAA8B,CAC9D,OAAQA,EAAW,CACjB,IAAK,GACI,OAAA,OAAO,IAAI,UAAU,SAC9B,IAAK,GACI,OAAA,OAAO,IAAI,UAAU,OAC9B,IAAK,GACI,OAAA,OAAO,IAAI,UAAU,SAC9B,QACQ,MAAA,IAAI,WAAW,yBAAyB,CAClD,CACF,CAOY,IAAAC,GAAAA,IAKVA,EAAAC,EAAA,UAAA,GAAA,YAMAD,EAAAC,EAAA,iBAAA,GAAA,mBAMAD,EAAAC,EAAA,KAAA,GAAA,OAjBUD,IAAAA,GAAA,CAAA,CAAA,EA0BL,SAASE,GAAqBC,EAA2C,CAC9E,OAAQA,EAAc,CACpB,IAAK,GAEI,OAAA,OAAO,IAAI,eAAe,UACnC,IAAK,GAEI,OAAA,OAAO,IAAI,eAAe,iBACnC,IAAK,GAEI,OAAA,OAAO,IAAI,eAAe,KACnC,QACQ,MAAA,IAAI,WAAW,uBAAuB,CAChD,CACF,CAkBO,SAASC,GAAwBC,EAA0D,CAC5F,GAAA,OAAOA,GAAoB,SAAU,CACnC,GAAAA,EAAkB,GAAKA,EAAkB,IACrC,MAAA,IAAI,WAAW,8CAA8C,EAE5D,OAAAA,CAEX,CAEA,OAAQA,EAAiB,CACvB,IAAK,MAEI,OAAA,OAAO,WAAW,gBAAgB,IAC3C,IAAK,OAEI,OAAA,OAAO,WAAW,gBAAgB,KAC3C,IAAK,WAEI,OAAA,OAAO,WAAW,gBAAgB,SAC3C,QACQ,MAAA,IAAI,WAAW,0BAA0B,CACnD,CACF,CAMY,IAAAC,GAAAA,IAKVA,EAAAC,EAAA,OAAA,GAAA,SAMAD,EAAAC,EAAA,QAAA,GAAA,UAMAD,EAAAC,EAAA,SAAA,GAAA,WAjBUD,IAAAA,GAAA,CAAA,CAAA,EA0BL,SAASE,GAA0BC,EAA8C,CACtF,OAAQA,EAAmB,CACzB,IAAK,GACH,OAAO,OAAO,kBAAkB,SAClC,IAAK,GACH,OAAO,OAAO,kBAAkB,QAClC,IAAK,GACH,OAAO,OAAO,kBAAkB,OAClC,QACQ,MAAA,IAAI,WAAW,4BAA4B,CACrD,CACF,CAMY,IAAAC,IAAAA,IACVA,EAAAC,EAAA,QAAA,GAAA,UAASD,EAAAC,EAAA,cAAA,GAAA,gBAAeD,EAAAC,EAAA,SAAA,GAAA,WAAUD,EAAAC,EAAA,IAAA,GAAA,MAAKD,EAAAC,EAAA,OAAA,GAAA,SAAQD,EAAAC,EAAA,KAAA,GAAA,OAAMD,EAAAC,EAAA,MAAA,GAAA,QAAOD,EAAAC,EAAA,QAAA,GAAA,UAASD,EAAAC,EAAA,KAAA,GAAA,OACrED,EAAAC,EAAA,WAAA,GAAA,aAAYD,EAAAC,EAAA,UAAA,IAAA,YAAWD,EAAAC,EAAA,UAAA,IAAA,YAAWD,EAAAC,EAAA,YAAA,IAAA,cAAaD,EAAAC,EAAA,cAAA,IAAA,gBAAeD,EAAAC,EAAA,WAAA,IAAA,aAC9DD,EAAAC,EAAA,WAAA,IAAA,aAAYD,EAAAC,EAAA,SAAA,IAAA,WAAUD,EAAAC,EAAA,MAAA,IAAA,QAAOD,EAAAC,EAAA,QAAA,IAAA,UAASD,EAAAC,EAAA,QAAA,IAAA,UAASD,EAAAC,EAAA,OAAA,IAAA,SAAQD,EAAAC,EAAA,aAAA,IAAA,eAAcD,EAAAC,EAAA,OAAA,IAAA,SACrED,EAAAC,EAAA,aAAA,IAAA,eAAcD,EAAAC,EAAA,UAAA,IAAA,YAAWD,EAAAC,EAAA,KAAA,IAAA,OAAMD,EAAAC,EAAA,QAAA,IAAA,UAASD,EAAAC,EAAA,SAAA,IAAA,WAAUD,EAAAC,EAAA,OAAA,IAAA,SAAQD,EAAAC,EAAA,WAAA,IAAA,aAC1DD,EAAAC,EAAA,gBAAA,IAAA,kBAAiBD,EAAAC,EAAA,WAAA,IAAA,aAAYD,EAAAC,EAAA,SAAA,IAAA,WAAUD,EAAAC,EAAA,OAAA,IAAA,SAAQD,EAAAC,EAAA,QAAA,IAAA,UAASD,EAAAC,EAAA,MAAA,IAAA,QAAOD,EAAAC,EAAA,QAAA,IAAA,UAC/DD,EAAAC,EAAA,WAAA,IAAA,aAAYD,EAAAC,EAAA,OAAA,IAAA,SAAQD,EAAAC,EAAA,IAAA,IAAA,MANVD,IAAAA,IAAA,CAAA,CAAA,EAeL,SAASE,EAAoBC,EACL,CAC7B,OAAQA,EAAU,CAChB,IAAK,GACH,OAAO,OAAO,wBAAwB,QACxC,IAAK,GACH,OAAO,OAAO,wBAAwB,cACxC,IAAK,GACH,OAAO,OAAO,wBAAwB,SACxC,IAAK,GACH,OAAO,OAAO,wBAAwB,IACxC,IAAK,GACH,OAAO,OAAO,wBAAwB,OACxC,IAAK,GACH,OAAO,OAAO,wBAAwB,KACxC,IAAK,GACH,OAAO,OAAO,wBAAwB,MACxC,IAAK,GACH,OAAO,OAAO,wBAAwB,QACxC,IAAK,GACH,OAAO,OAAO,wBAAwB,KACxC,IAAK,GACH,OAAO,OAAO,wBAAwB,WACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,UACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,UACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,YACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,cACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,WACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,WACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,SACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,MACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,QACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,QACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,OACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,aACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,OACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,aACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,UACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,KACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,QACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,SACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,OACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,WACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,gBACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,WACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,SACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,OACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,QACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,MACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,QACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,WACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,OACxC,IAAK,IACH,OAAO,OAAO,wBAAwB,IACxC,QACQ,MAAA,IAAI,WAAW,oCAAoC,CAC7D,CACF,CAwDO,SAASC,EAAyBpB,EAAoD,CAC3F,OAAO,IAAI,OAAO,iBAChB,IAAI,OAAO,WAAWA,EAAO,eAAgBA,EAAO,eAAe,EACnE,IAAI,OAAO,eAAeA,EAAO,cAAeA,EAAO,cAAc,CAAA,CAEzE,CCjbA,SAAwBqB,EACtBC,EACAC,EACAC,EACAC,EACA,CACA7C,EAAAA,UAAU,IAAM,CACV,GAAA,CAAC0C,GAAW,CAACE,EAAgB,OAG3B,MAAAE,EAAiBC,GAAM,CACnBH,EAAAC,EAASE,CAAC,CAAC,CAAA,EAIb,OAAAL,EAAA,iBAAiBC,EAAMG,CAAa,EAErC,IAAMJ,EAAQ,oBAAoBC,EAAMG,CAAa,CAAA,EAC3D,CAACJ,EAASE,CAAO,CAAC,CACvB,CCdA,MAAAI,EAAA7C,EAAA,WAAA,CAAA,CAAoF,SAAA8C,EAAA,OACvE,KAAAC,EAEL,MAAA5C,EACN,YAAAO,EAAAH,EAAA,MAE0B,QAAAQ,EAAAH,EAAA,SACR,UAAAU,EAAAH,EAAA,SACI,aAAAO,EAAAH,EAAA,UACM,kBAAAyB,EAAA,GAER,gBAAAC,EAAA,GACF,cAAAC,EAAA,GACF,aAAAC,EAAAtB,EAAA,SACiB,WAAAuB,EAAAvB,EAAA,OACF,oBAAAwB,EAAA,GACT,iBAAAC,EAAA,GACH,yBAAAC,EAAA,GACQ,sBAAAC,EAAA,GACH,kBAAAC,EAAA,GACJ,mBAAAC,EAAA,GACC,iBAAAC,EAAA,GACF,sBAAAC,EAAA,OAEK,sBAAAC,EAAA,OACA,WAAAC,EAAA,EAEX,aAAAC,EAAA,EACE,cAAAC,EAAA,EACC,YAAAC,EAAA,EACF,cAAAC,EAAA,OAEE,eAAAC,EAAA,OACC,kBAAAC,EAAA,EACG,kBAAAC,EAAA,IACA,OAAAC,EAAA,OAEX,oBAAAC,GAAA,OAEa,kBAAAC,GAAA,OACF,gBAAAC,GAAA,OACF,YAAAC,GAAA,OAEJ,YAAAC,GAAA,OACA,YAAAC,GAAA,OACA,qBAAAC,GAAA,OAES,oBAAAC,GAAA,OACD,QAAAC,GAAA,OAEZ,YAAAC,GAAA,OACI,YAAAC,GAAA,OACA,UAAAC,GAAA,MAEhB,EAAAC,KAAA,CACE,KAAA,CAAAC,EAAAC,EAAA,EAAA1F,EAAA,SAAA,IAAA,EACA4C,EAAA+C,SAAA,IAAA,EACAC,EAAAD,SAAA,EAAA,EAGAzF,EAAAA,UAAA,MACE,OAAAkD,GAAA,WAAAA,EAAA7C,IACAC,CAAA,EAAA,KAAA,IAAA,CACE,GAAAoF,EAAA,QAAoB,OACpB,MAAAC,EAAAtB,EAAA,CAAA,OAAA7B,EAAA6B,CAAA,CAAA,EAAA,GAGAmB,GAAA,IAAA,OAAA,IAAA9C,EAAA,QAAAiD,CAAA,CAAA,EACAD,EAAA,QAAA,EAAiB,CAAA,EAGnB,IAAA,CACEH,IACEA,EAAA,QAAA,EACAG,EAAA,QAAA,GACF,GACF,CAAA,CAAA,EAIF1F,EAAAA,UAAA,IAAA,CACEuF,IAAA,OACEd,GAAA,MAAAA,IACF,EAAA,CAAAc,CAAA,CAAA,EAIFK,EAAAA,oBAAAN,GAAA,IAAAC,EAAA,CAAAA,CAAA,CAAA,EAEA,MAAAzE,EAAArB,GAAA,8BAAA,EAEAO,EAAAA,UAAA,IAAA,CACEuF,IACAA,EAAA,YAAA3E,GAAAC,EAAAC,CAAA,EAA6D,EAAA,CAAAyE,EAAA1E,EAAAC,CAAA,CAAA,EAE/Dd,EAAAA,UAAA,IAAA,CACEuF,IACAA,EAAA,QAAAtE,GAAAC,CAAA,EAAqC,EAAA,CAAAqE,EAAArE,CAAA,CAAA,EAEvClB,EAAAA,UAAA,IAAA,CACEuF,IACAA,EAAA,UAAA/D,GAAAC,CAAA,EAA2C,EAAA,CAAA8D,EAAA9D,CAAA,CAAA,EAE7CzB,EAAAA,UAAA,IAAA,CACEuF,IAEAA,EAAA,aAAA3D,GAAAC,CAAA,EAAoD,EAAA,CAAA0D,EAAA1D,CAAA,CAAA,EAetD,OAAA,QAXA,CAA0B,kBAAAsB,EACxB,gBAAAC,EACA,cAAAC,EACA,oBAAAG,EACA,iBAAAC,EACA,yBAAAC,EACA,sBAAAC,EACA,kBAAAC,EACA,mBAAAC,CACA,CAEF,EAAA,QAAA,CAAA,CAAAgC,EAAAC,CAAA,IAAA,CACE9F,EAAAA,UAAA,IAAA,CACEuF,IAEAA,EAAAM,GAAAC,EAAoB,EAAA,CAAAP,EAAAO,CAAA,CAAA,CACR,CAAA,EAQhB,OAAA,QAJA,CAAoC,aAAAxC,EAClC,WAAAC,CACA,CAEF,EAAA,QAAA,CAAA,CAAAsC,EAAAC,CAAA,IAAA,CACE9F,EAAAA,UAAA,IAAA,CACEuF,IAEAA,EAAAM,GAAA3D,GAAA4D,CAAA,EAAkD,EAAA,CAAAP,EAAAO,CAAA,CAAA,CACtC,CAAA,EAIhB9F,EAAAA,UAAA,IAAA,CACE,GAAAuF,EACA,GAAA,CAGEA,EAAA,kBAAAzB,CAAwB,MAAA,CACxB,CAA4B,EAAA,CAAAyB,EAAAzB,CAAA,CAAA,EAIhC9D,EAAAA,UAAA,IAAA,CACEuF,IACAA,EAAA,QAAA,IAAA,OAAA,QAAAtB,EAAAC,EAAAC,EAAAC,CAAA,EAAqF,EAAA,CAAAmB,EAAAtB,EAAAC,EAAAC,EAAAC,CAAA,CAAA,EAIvFpE,EAAAA,UAAA,IAAA,CACEuF,IAEAA,EAAA,eAAAjB,EAAA9B,EAAA8B,CAAA,EAAA,KAAiF,EAAA,CAAAiB,EAAAjB,CAAA,CAAA,EAInFtE,EAAAA,UAAA,IAAA,CACEuF,IAEAA,EAAA,gBAAA,IAAA,OAAA,gBAAAhB,EAAAC,CAAA,EAAqF,EAAA,CAAAe,EAAAhB,EAAAC,CAAA,CAAA,EAIvFxE,EAAAA,UAAA,IAAA,CACE,GAAAuF,EAEA,IAAAxB,GAAAC,EACE,MAAA,IAAA,MAAA,qEAAA,EAAqFD,EAErFwB,EAAA,sBAAA,OAAA,sBAAA,UAAyDxB,EAAA,IAAAzB,CAAA,CACV,EAC/C0B,EAEAuB,EAAA,sBAAA,OAAA,sBAAA,UAAyDvB,EAAA,IAAA1B,CAAA,CACV,EAI/C,OAAAiD,EAAA,sBACF,EAAA,CAAAA,EAAAxB,EAAAC,CAAA,CAAA,EAIF,MAAA+B,EAAA,IAAA5E,GAAAoE,EAAA,MAAA,EACA9C,EAAA8C,EAAA,sBAAAb,GAAAqB,CAAA,EACAtD,EAAA8C,EAAA,oBAAAZ,GAAAoB,CAAA,EACAtD,EAAA8C,EAAA,kBAAAX,GAAA,IAAAvD,GAAAkE,EAAA,OAAA,CAAA,EAMA,MAAAS,EAAA,CAAA,CAAA,UAAAC,EAAA,YAAAC,CAAA,KAAA,CAAqF,UAAAD,EACnF,YAAAC,EACA,cAAA,IAAAX,EAAA,+BAAAW,CAAA,CACoE,GAEtE,OAAAzD,EAAA8C,EAAA,aAAAV,GAAAmB,CAAA,EACAvD,EAAA8C,EAAA,aAAAT,GAAAkB,CAAA,EACAvD,EAAA8C,EAAA,aAAAR,GAAAiB,CAAA,EAOAvD,EAAA8C,EAAA,uBAAAP,GAAA,CAAA,CAAA,WAAA,CAAA,SAAAmB,EAAA,UAAAC,CAAA,EAAA,UAAAC,EAAA,WAAAC,CAAA,KAAA,CAA0K,WAAA,CAAA,SAAAH,EAAA,UAAAC,CAAA,EACtI,UAAAC,EAClC,WAAAC,CACA,EAAA,EAMF7D,EAAA8C,EAAA,sBAAAN,GAAA,CAAA,CAAA,KAAAsB,EAAA,QAAAC,CAAA,KAAA,CAAA,KAAAD,EAAA,QAAAC,CAAA,EAAA,EAGA,CAAkB,CAAA,KAAA,QAAA,QAAAtB,EAAA,EACkB,CAAA,KAAA,YAAA,QAAAC,EAAA,EACQ,CAAA,KAAA,YAAA,QAAAC,EAAA,EACA,CAAA,KAAA,UAAA,QAAAC,EAAA,CACJ,EAExC,QAAA,CAAA,CAAA,KAAA1C,EAAA,QAAAC,CAAA,IAAA,CACE5C,EAAAA,UAAA,IAAA,OACE,GAAA,CAAAuF,GAAA,CAAA3C,EAAsB,OAEtB,MAAA6D,EAAA1D,GAAA,CACEH,EAAA,CAAQ,UAAA,CAAAG,CAAA,EACO,YAAA,CAAA,EAAAA,EAAA,MAAA,EAAAA,EAAA,KAAA,EACyB,eAAA,CAEpC,KAAA,CAAA,SAAAoD,GAAA,UAAAC,EAAA,EAAAb,EAAA,+BAAA,IAAA,SAAAxC,EAAA,MAAAA,EAAA,KAAA,CAAA,EAEA,MAAA,CAAA,SAAAoD,GAAA,UAAAC,GAA6B,CAC/B,CAAA,CACD,EAGH,OAAAM,EAAAhE,EAAA,UAAA,MAAAgE,EAAA,iBAAA/D,EAAA8D,GACA,IAAA,OAAA,OAAAC,EAAAhE,EAAA,UAAA,YAAAgE,EAAA,oBAAA/D,EAAA8D,GAAgE,EAAA,CAAAlB,EAAA3C,CAAA,CAAA,CACjD,CAAA,EAGnB+D,EAAAxG,EAAA,WAAA,CAAA,SAAAwG,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,OAAA,OAAA,QAAA,IAAAjE,EAAA,SAAAiE,EAAAzG,GAAA,SAAA,CAAA,MAAAqF,EAAA,SAAAtC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CASF,CAAA,EACA2D,GAAA5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}