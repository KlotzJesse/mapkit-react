{"version":3,"file":"Annotation-71ad84a7.js","sources":["../../src/components/Annotation.tsx"],"sourcesContent":["import {\n  useContext,\n  useEffect,\n  useState,\n  useMemo,\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport MapContext from '../context/MapContext';\nimport AnnotationProps from './AnnotationProps';\nimport forwardMapkitEvent from '../util/forwardMapkitEvent';\n\nexport default function Annotation({\n  latitude,\n  longitude,\n\n  title = '',\n  subtitle = '',\n  accessibilityLabel = null,\n\n  size = undefined,\n\n  paddingTop = 0,\n  paddingRight = 0,\n  paddingBottom = 0,\n  paddingLeft = 0,\n  anchorOffsetX = 0,\n  anchorOffsetY = 0,\n\n  selected = false,\n\n  onSelect = undefined,\n  onDeselect = undefined,\n  onDragStart = undefined,\n  onDragEnd = undefined,\n  onDragging = undefined,\n\n  animates = true,\n  appearanceAnimation = '',\n  visible = true,\n\n  clusteringIdentifier = null,\n  draggable = false,\n  enabled = true,\n\n  children,\n}: AnnotationProps) {\n  const [annotation, setAnnotation] = useState<mapkit.Annotation | null>(null);\n  const contentEl = useMemo<HTMLDivElement>(() => document.createElement('div'), []);\n  const map = useContext(MapContext);\n\n  // Coordinates\n  useEffect(() => {\n    if (map === null) return undefined;\n\n    const a = new mapkit.Annotation(\n      new mapkit.Coordinate(latitude, longitude),\n      () => contentEl,\n    );\n    map.addAnnotation(a);\n    setAnnotation(a);\n\n    return () => {\n      map.removeAnnotation(a);\n    };\n  }, [map, latitude, longitude]);\n\n  // Padding\n  useEffect(() => {\n    if (!annotation) return;\n    annotation.padding = new mapkit.Padding(paddingTop, paddingRight, paddingBottom, paddingLeft);\n  }, [annotation, paddingTop, paddingRight, paddingBottom, paddingLeft]);\n\n  // AnchorOffset\n  useEffect(() => {\n    if (!annotation) return;\n    annotation.anchorOffset = new DOMPoint(anchorOffsetX, anchorOffsetY);\n  }, [annotation, anchorOffsetX, anchorOffsetY]);\n\n  // Simple values properties\n  const properties = {\n    title,\n    subtitle,\n    accessibilityLabel,\n\n    size,\n\n    selected,\n    animates,\n    appearanceAnimation,\n    draggable,\n    enabled,\n    visible,\n    clusteringIdentifier,\n  };\n  Object.entries(properties).forEach(([propertyName, prop]) => {\n    useEffect(() => {\n      if (!annotation) return;\n      // @ts-ignore\n      if (prop === undefined) { delete annotation[propertyName]; return; }\n      // @ts-ignore\n      annotation[propertyName] = prop;\n    }, [annotation, prop]);\n  });\n\n  // Events\n  const handlerWithoutParameters = () => { };\n  const events = [\n    { name: 'select', handler: onSelect },\n    { name: 'deselect', handler: onDeselect },\n    { name: 'drag-start', handler: onDragStart },\n  ] as const;\n  events.forEach(({ name, handler }) => {\n    forwardMapkitEvent(annotation, name, handler, handlerWithoutParameters);\n  });\n\n  const dragEndParameters = () => ({\n    latitude: annotation!.coordinate.latitude,\n    longitude: annotation!.coordinate.longitude,\n  });\n  const draggingParameters = (e: { coordinate: mapkit.Coordinate }) => ({\n    latitude: e.coordinate.latitude,\n    longitude: e.coordinate.longitude,\n  });\n  forwardMapkitEvent(annotation, 'drag-end', onDragEnd, dragEndParameters);\n  forwardMapkitEvent(annotation, 'dragging', onDragging, draggingParameters);\n\n  return createPortal(children, contentEl);\n}\n"],"names":["Annotation","latitude","longitude","title","subtitle","accessibilityLabel","size","paddingTop","paddingRight","paddingBottom","paddingLeft","anchorOffsetX","anchorOffsetY","selected","onSelect","onDeselect","onDragStart","onDragEnd","onDragging","animates","appearanceAnimation","visible","clusteringIdentifier","draggable","enabled","children","annotation","setAnnotation","useState","contentEl","useMemo","map","useContext","MapContext","useEffect","a","propertyName","prop","handlerWithoutParameters","name","handler","forwardMapkitEvent","dragEndParameters","draggingParameters","e","createPortal"],"mappings":"6HAWA,SAAAA,EAAA,CAAmC,SAAAC,EACjC,UAAAC,EACA,MAAAC,EAAA,GAEQ,SAAAC,EAAA,GACG,mBAAAC,EAAA,KACU,KAAAC,EAAA,OAEd,WAAAC,EAAA,EAEM,aAAAC,EAAA,EACE,cAAAC,EAAA,EACC,YAAAC,EAAA,EACF,cAAAC,EAAA,EACE,cAAAC,EAAA,EACA,SAAAC,EAAA,GAEL,SAAAC,EAAA,OAEA,WAAAC,EAAA,OACE,YAAAC,EAAA,OACC,UAAAC,EAAA,OACF,WAAAC,EAAA,OACC,SAAAC,EAAA,GAEF,oBAAAC,EAAA,GACW,QAAAC,EAAA,GACZ,qBAAAC,EAAA,KAEa,UAAAC,EAAA,GACX,QAAAC,EAAA,GACF,SAAAC,CAGZ,EAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,IAAA,EACAC,EAAAC,EAAAA,QAAA,IAAA,SAAA,cAAA,KAAA,EAAA,CAAA,CAAA,EACAC,EAAAC,aAAAC,CAAA,EAGAC,EAAAA,UAAA,IAAA,CACE,GAAAH,IAAA,KAAkB,OAElB,MAAAI,EAAA,IAAA,OAAA,WAAqB,IAAA,OAAA,WAAAlC,EAAAC,CAAA,EACsB,IAAA2B,CACnC,EAER,OAAAE,EAAA,cAAAI,CAAA,EACAR,EAAAQ,CAAA,EAEA,IAAA,CACEJ,EAAA,iBAAAI,CAAA,CAAsB,CACxB,EAAA,CAAAJ,EAAA9B,EAAAC,CAAA,CAAA,EAIFgC,EAAAA,UAAA,IAAA,CACER,IACAA,EAAA,QAAA,IAAA,OAAA,QAAAnB,EAAAC,EAAAC,EAAAC,CAAA,EAA4F,EAAA,CAAAgB,EAAAnB,EAAAC,EAAAC,EAAAC,CAAA,CAAA,EAI9FwB,EAAAA,UAAA,IAAA,CACER,IACAA,EAAA,aAAA,IAAA,SAAAf,EAAAC,CAAA,EAAmE,EAAA,CAAAc,EAAAf,EAAAC,CAAA,CAAA,EAmBrE,OAAA,QAfA,CAAmB,MAAAT,EACjB,SAAAC,EACA,mBAAAC,EACA,KAAAC,EAEA,SAAAO,EAEA,SAAAM,EACA,oBAAAC,EACA,UAAAG,EACA,QAAAC,EACA,QAAAH,EACA,qBAAAC,CACA,CAEF,EAAA,QAAA,CAAA,CAAAc,EAAAC,CAAA,IAAA,CACEH,EAAAA,UAAA,IAAA,CACE,GAAAR,EAEA,IAAAW,IAAA,OAAA,CAA0B,OAAAX,EAAAU,GAAiC,MAAA,CAE3DV,EAAAU,GAAAC,EAA2B,EAAA,CAAAX,EAAAW,CAAA,CAAA,CACR,CAAA,EAIvB,MAAAC,EAAA,IAAA,CAAuC,EACvC,CAAe,CAAA,KAAA,SAAA,QAAAxB,CAAA,EACuB,CAAA,KAAA,WAAA,QAAAC,CAAA,EACI,CAAA,KAAA,aAAA,QAAAC,CAAA,CACG,EAE7C,QAAA,CAAA,CAAA,KAAAuB,EAAA,QAAAC,CAAA,IAAA,CACEC,EAAAf,EAAAa,EAAAC,EAAAF,CAAA,CAAsE,CAAA,EAGxE,MAAAI,EAAA,KAAA,CAAiC,SAAAhB,EAAA,WAAA,SACE,UAAAA,EAAA,WAAA,SACC,GAEpCiB,EAAAC,IAAA,CAAsE,SAAAA,EAAA,WAAA,SAC7C,UAAAA,EAAA,WAAA,SACC,GAE1B,OAAAH,EAAAf,EAAA,WAAAT,EAAAyB,CAAA,EACAD,EAAAf,EAAA,WAAAR,EAAAyB,CAAA,EAEAE,EAAA,aAAApB,EAAAI,CAAA,CACF;;;;;;;;;;;;;;;;"}