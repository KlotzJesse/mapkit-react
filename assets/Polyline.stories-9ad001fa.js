import{j as s}from"./jsx-runtime-670450c2.js";import{r as l}from"./index-f1f749bf.js";import{b as q,M as O,C as S}from"./Map-700fab0a.js";import"./Marker-466a39e9.js";import"./Annotation-81553d52.js";import"./Polygon-5c101e17.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-96c5f47c.js";import"./CalloutContainer-cb49d305.js";function d({points:i,visible:u=!0,enabled:f=!0,selected:h=!1,onSelect:y=void 0,onDeselect:g=void 0,lineCap:v="round",lineDash:k=[],lineDashOffset:b=0,lineJoin:E="round",lineWidth:j=1,strokeColor:C="rgb(0, 122, 255)",strokeOpacity:D=1,strokeStart:V=0,strokeEnd:w=1}){const[e,I]=l.useState(null),o=l.useContext(q);return l.useEffect(()=>{if(o===null)return;const t=new mapkit.PolylineOverlay([]);return o.addOverlay(t),I(t),()=>{o.removeOverlay(t)}},[o]),l.useEffect(()=>{e!==null&&(e.points=i.map(({latitude:t,longitude:n})=>new mapkit.Coordinate(t,n)))},[e,i]),Object.entries({visible:u,enabled:f,selected:h}).forEach(([t,n])=>{l.useEffect(()=>{e&&(e[t]=n)},[e,n])}),Object.entries({lineCap:v,lineDash:k,lineDashOffset:b,lineJoin:E,lineWidth:j,strokeColor:C,strokeOpacity:D,strokeStart:V,strokeEnd:w}).forEach(([t,n])=>{l.useEffect(()=>{e&&(e.style[t]=n)},[e,n])}),[{name:"select",handler:y},{name:"deselect",handler:g}].forEach(({name:t,handler:n})=>{l.useEffect(()=>{if(!e||!n)return;const r=()=>n();return e.addEventListener(t,r),()=>e.removeEventListener(t,r)},[e,n])}),null}try{d.displayName="Polyline",d.__docgenInfo={description:"",displayName:"Polyline",props:{points:{defaultValue:null,description:`An array of coordinate points that define the polyline overlay’s shape.
@see {@link https://developer.apple.com/documentation/mapkitjs/polylineoverlay/2974014-points}`,name:"points",required:!0,type:{name:"Coordinate[]"}},visible:{defaultValue:{value:"true"},description:`A Boolean value that determines whether the polyline is visible.
@see {@link https://developer.apple.com/documentation/mapkitjs/overlay/2974002-visible}`,name:"visible",required:!1,type:{name:"boolean"}},enabled:{defaultValue:{value:"true"},description:`A Boolean value that determines whether the polyline responds to user interaction.
@see {@link https://developer.apple.com/documentation/mapkitjs/overlay/2973997-enabled}`,name:"enabled",required:!1,type:{name:"boolean"}},selected:{defaultValue:{value:"false"},description:`A Boolean value that determines whether the map displays the polyline in a selected state.
@see {@link https://developer.apple.com/documentation/mapkitjs/overlay/2974000-selected}`,name:"selected",required:!1,type:{name:"boolean"}},onSelect:{defaultValue:{value:"undefined"},description:"Event fired when the polyline is selected.",name:"onSelect",required:!1,type:{name:"(() => void)"}},onDeselect:{defaultValue:{value:"undefined"},description:"Event fired when the polyline is deselected.",name:"onDeselect",required:!1,type:{name:"(() => void)"}},lineCap:{defaultValue:{value:"round"},description:`The style to use when drawing line endings.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974024-linecap}`,name:"lineCap",required:!1,type:{name:"enum",value:[{value:'"butt"'},{value:'"round"'},{value:'"square"'}]}},lineDash:{defaultValue:{value:"[]"},description:`An array of line and gap lengths for creating a dashed line.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974025-linedash}`,name:"lineDash",required:!1,type:{name:"number[]"}},lineDashOffset:{defaultValue:{value:"0"},description:`The number of CSS pixels to use as an offset when drawing a line’s dash pattern.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974026-linedashoffset}`,name:"lineDashOffset",required:!1,type:{name:"number"}},lineJoin:{defaultValue:{value:"round"},description:`The corner style to apply when joining line segments.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974027-linejoin}`,name:"lineJoin",required:!1,type:{name:"enum",value:[{value:'"round"'},{value:'"miter"'},{value:'"bevel"'}]}},lineWidth:{defaultValue:{value:"1"},description:`The width of a line’s stroke, in CSS pixels.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974028-linewidth}`,name:"lineWidth",required:!1,type:{name:"number"}},strokeColor:{defaultValue:{value:"rgb(0, 122, 255)"},description:`The stroke color of a line.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974030-strokecolor}`,name:"strokeColor",required:!1,type:{name:"string"}},strokeOpacity:{defaultValue:{value:"1"},description:`The opacity of the stroke color.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974031-strokeopacity}`,name:"strokeOpacity",required:!1,type:{name:"number"}},strokeStart:{defaultValue:{value:"0"},description:`The unit distance along the line where a stroke begins.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/3586011-strokestart}`,name:"strokeStart",required:!1,type:{name:"number"}},strokeEnd:{defaultValue:{value:"1"},description:`The unit distance along the line where a stroke ends.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/3586010-strokeend}`,name:"strokeEnd",required:!1,type:{name:"number"}}}}}catch{}const M="eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlEzNE1EVFdEM1EifQ.eyJpc3MiOiJXNDdFMkxTNVk5IiwiaWF0IjoxNzEyMDUwMzA1LCJleHAiOjE3NDM1NTIwMDAsIm9yaWdpbiI6Imh0dHBzOi8vbmljb2xhcHBzLmdpdGh1Yi5pbyJ9.8SZ6HkDxS04_PFb6eCdD7jRnOF68DYznTAm1FJo4VI11ALk9O-g6Gcd1vblpE4PRIoyobAVvCkudDJqLTY2pfA",H={title:"Components/Polyline",component:d,parameters:{layout:"fullscreen"}},P=i=>{const u=l.useMemo(()=>({centerLatitude:46.52,centerLongitude:6.57,latitudeDelta:.07,longitudeDelta:.03}),[]);return s(O,{token:M,initialRegion:u,colorScheme:S.Dark,children:s(d,{...i})})},a=P.bind({});a.args={lineWidth:5,lineDash:[15,5],lineCap:"butt",strokeColor:"#ffcc02",points:[{longitude:6.51871,latitude:46.51821},{longitude:6.52363,latitude:46.51768},{longitude:6.52502,latitude:46.51755},{longitude:6.52518,latitude:46.51749},{longitude:6.52996,latitude:46.51664},{longitude:6.53456,latitude:46.51569},{longitude:6.53542,latitude:46.51545},{longitude:6.53697,latitude:46.51509},{longitude:6.53955,latitude:46.51428},{longitude:6.53972,latitude:46.51427},{longitude:6.54241,latitude:46.51354},{longitude:6.54498,latitude:46.5133},{longitude:6.5457,latitude:46.51331},{longitude:6.54876,latitude:46.51371},{longitude:6.55429,latitude:46.51383},{longitude:6.5576,latitude:46.51401},{longitude:6.56135,latitude:46.5155},{longitude:6.56553,latitude:46.51701},{longitude:6.56617,latitude:46.51706},{longitude:6.56987,latitude:46.51739},{longitude:6.57218,latitude:46.518},{longitude:6.57291,latitude:46.51824},{longitude:6.5776,latitude:46.51958},{longitude:6.58353,latitude:46.52068},{longitude:6.58515,latitude:46.52113},{longitude:6.59009,latitude:46.52296},{longitude:6.59488,latitude:46.52273},{longitude:6.59814,latitude:46.52078},{longitude:6.60067,latitude:46.51869},{longitude:6.60255,latitude:46.51781},{longitude:6.60289,latitude:46.51752},{longitude:6.60262,latitude:46.51694},{longitude:6.60341,latitude:46.51644},{longitude:6.60626,latitude:46.51603},{longitude:6.61103,latitude:46.51458},{longitude:6.61136,latitude:46.51435},{longitude:6.61177,latitude:46.51408},{longitude:6.61312,latitude:46.51317},{longitude:6.61685,latitude:46.51182},{longitude:6.61708,latitude:46.51165},{longitude:6.62164,latitude:46.50887},{longitude:6.62643,latitude:46.50693}]};var p,m,c;a.parameters={...a.parameters,docs:{...(p=a.parameters)==null?void 0:p.docs,source:{originalSource:`args => {
  const initialRegion: CoordinateRegion = useMemo(() => ({
    centerLatitude: 46.52,
    centerLongitude: 6.57,
    latitudeDelta: 0.07,
    longitudeDelta: 0.03
  }), []);
  return <Map token={token} initialRegion={initialRegion} colorScheme={ColorScheme.Dark}>
      <Polyline {...args} />
    </Map>;
}`,...(c=(m=a.parameters)==null?void 0:m.docs)==null?void 0:c.source}}};const G=["Default"];export{a as Default,G as __namedExportsOrder,H as default};
//# sourceMappingURL=Polyline.stories-9ad001fa.js.map
