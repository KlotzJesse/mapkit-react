{"version":3,"file":"Annotation-afba82f5.js","sources":["../../src/components/Annotation.tsx"],"sourcesContent":["import React, {\n  useContext,\n  useEffect,\n  useState,\n  useMemo,\n  useRef,\n  useLayoutEffect,\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport MapContext from '../context/MapContext';\nimport AnnotationProps from './AnnotationProps';\nimport forwardMapkitEvent from '../util/forwardMapkitEvent';\nimport CalloutContainer from './CalloutContainer';\nimport { toMapKitDisplayPriority } from '../util/parameters';\n\nexport default function Annotation({\n  latitude,\n  longitude,\n\n  title = '',\n  subtitle = '',\n  accessibilityLabel = null,\n\n  size = undefined,\n\n  paddingTop = 0,\n  paddingRight = 0,\n  paddingBottom = 0,\n  paddingLeft = 0,\n  anchorOffsetX = 0,\n  anchorOffsetY = 0,\n\n  selected = false,\n\n  onSelect = undefined,\n  onDeselect = undefined,\n  onDragStart = undefined,\n  onDragEnd = undefined,\n  onDragging = undefined,\n\n  animates = true,\n  appearanceAnimation = '',\n  visible = true,\n\n  clusteringIdentifier = null,\n  displayPriority = undefined,\n  collisionMode = undefined,\n\n  calloutElement = undefined,\n  calloutContent = undefined,\n  calloutLeftAccessory = undefined,\n  calloutRightAccessory = undefined,\n\n  calloutEnabled = undefined,\n  calloutOffsetX = 0,\n  calloutOffsetY = 0,\n\n  draggable = false,\n  enabled = true,\n\n  children,\n}: AnnotationProps) {\n  const [annotation, setAnnotation] = useState<mapkit.Annotation | null>(null);\n  const contentEl = useMemo<HTMLDivElement>(() => document.createElement('div'), []);\n  const map = useContext(MapContext);\n\n  // Padding\n  useEffect(() => {\n    if (!annotation) return;\n    annotation.padding = new mapkit.Padding(paddingTop, paddingRight, paddingBottom, paddingLeft);\n  }, [annotation, paddingTop, paddingRight, paddingBottom, paddingLeft]);\n\n  // AnchorOffset\n  useEffect(() => {\n    if (!annotation) return;\n    annotation.anchorOffset = new DOMPoint(anchorOffsetX, anchorOffsetY);\n  }, [annotation, anchorOffsetX, anchorOffsetY]);\n\n  // CalloutOffset\n  useEffect(() => {\n    if (!annotation) return;\n    annotation.calloutOffset = new DOMPoint(calloutOffsetX, calloutOffsetY);\n  }, [annotation, calloutOffsetX, calloutOffsetY]);\n\n  const calloutLeftAccessoryRef = useRef<HTMLDivElement>(null);\n  const calloutRightAccessoryRef = useRef<HTMLDivElement>(null);\n  const calloutContentRef = useRef<HTMLDivElement>(null);\n  const calloutElementRef = useRef<HTMLDivElement>(null);\n\n  // Callout\n  useLayoutEffect(() => {\n    if (!annotation) return;\n\n    const callOutObj: mapkit.AnnotationCalloutDelegate = {};\n    if (calloutElement && calloutElementRef.current !== null) {\n      // @ts-expect-error\n      callOutObj.calloutElementForAnnotation = () => calloutElementRef.current;\n    }\n    if (\n      calloutLeftAccessory\n      && calloutLeftAccessoryRef.current !== null\n    ) {\n      // @ts-expect-error\n      callOutObj.calloutLeftAccessoryForAnnotation = () => calloutLeftAccessoryRef\n        .current;\n    }\n    if (\n      calloutRightAccessory\n      && calloutRightAccessoryRef.current !== null\n    ) {\n      // @ts-expect-error\n      callOutObj.calloutRightAccessoryForAnnotation = () => calloutRightAccessoryRef\n        .current;\n    }\n    if (calloutContent && calloutContentRef.current !== null) {\n      // @ts-expect-error\n      callOutObj.calloutContentForAnnotation = () => calloutContentRef.current;\n    }\n    if (Object.keys(callOutObj).length > 0) {\n      annotation.callout = callOutObj;\n    } else {\n      // @ts-expect-error\n      delete annotation.callout;\n    }\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      // @ts-expect-error\n      delete annotation.callout;\n    };\n  }, [\n    annotation,\n    calloutElement,\n    calloutLeftAccessory,\n    calloutRightAccessory,\n    calloutContent,\n    calloutElementRef.current,\n    calloutLeftAccessoryRef.current,\n    calloutRightAccessoryRef.current,\n    calloutContentRef.current,\n  ]);\n\n  // Collision Mode\n  useEffect(() => {\n    if (!annotation) return;\n\n    if (collisionMode === 'Circle') {\n      annotation.collisionMode = mapkit.Annotation.CollisionMode.Circle;\n    } else if (collisionMode === 'Rectangle') {\n      annotation.collisionMode = mapkit.Annotation.CollisionMode.Rectangle;\n    } else {\n      // @ts-ignore\n      delete annotation.collisionMode;\n    }\n  }, [annotation, collisionMode]);\n\n  // Display Priority\n  useEffect(() => {\n    if (!annotation) return;\n    // @ts-ignore\n    if (displayPriority === undefined) { delete annotation.displayPriority; return; }\n    // @ts-ignore\n    annotation.displayPriority = toMapKitDisplayPriority(displayPriority);\n  }, [annotation, displayPriority]);\n\n  // Simple values properties\n  const properties = {\n    title,\n    subtitle,\n    accessibilityLabel,\n\n    size,\n\n    selected,\n    animates,\n    appearanceAnimation,\n    draggable,\n    enabled,\n    visible,\n\n    clusteringIdentifier,\n\n    calloutEnabled,\n  };\n  Object.entries(properties).forEach(([propertyName, prop]) => {\n    useEffect(() => {\n      if (!annotation) return;\n      // @ts-ignore\n      if (prop === undefined) { delete annotation[propertyName]; return; }\n      // @ts-ignore\n      annotation[propertyName] = prop;\n    }, [annotation, prop]);\n  });\n\n  // Events\n  const handlerWithoutParameters = () => { };\n  const events = [\n    { name: 'select', handler: onSelect },\n    { name: 'deselect', handler: onDeselect },\n    { name: 'drag-start', handler: onDragStart },\n  ] as const;\n  events.forEach(({ name, handler }) => {\n    forwardMapkitEvent(annotation, name, handler, handlerWithoutParameters);\n  });\n\n  const dragEndParameters = () => ({\n    latitude: annotation!.coordinate.latitude,\n    longitude: annotation!.coordinate.longitude,\n  });\n  const draggingParameters = (e: { coordinate: mapkit.Coordinate }) => ({\n    latitude: e.coordinate.latitude,\n    longitude: e.coordinate.longitude,\n  });\n  forwardMapkitEvent(annotation, 'drag-end', onDragEnd, dragEndParameters);\n  forwardMapkitEvent(annotation, 'dragging', onDragging, draggingParameters);\n\n  // Coordinates - This needs to be the last useEffect,\n  // as removing the annotation needs to be the last unmount action\n  useLayoutEffect(() => {\n    if (map === null) return undefined;\n\n    const a = new mapkit.Annotation(\n      new mapkit.Coordinate(latitude, longitude),\n      () => contentEl,\n    );\n    map.addAnnotation(a);\n    setAnnotation(a);\n\n    return () => {\n      map.removeAnnotation(a);\n    };\n  }, [map, latitude, longitude]);\n\n  return (\n    <>\n      {createPortal(\n        <div style={{ display: 'none' }}>\n          {(calloutContent !== undefined) && (\n          <CalloutContainer\n            ref={calloutContentRef}\n            type=\"content\"\n          >\n            {calloutContent}\n          </CalloutContainer>\n          )}\n          {(calloutLeftAccessory !== undefined) && (\n          <CalloutContainer\n            ref={calloutLeftAccessoryRef}\n            type=\"left\"\n          >\n            {calloutLeftAccessory}\n          </CalloutContainer>\n          )}\n          {(calloutRightAccessory !== undefined) && (\n          <CalloutContainer\n            ref={calloutRightAccessoryRef}\n            type=\"right\"\n          >\n            {calloutRightAccessory}\n          </CalloutContainer>\n          )}\n          {(calloutElement !== undefined) && (\n          <CalloutContainer\n            ref={calloutElementRef}\n            type=\"container\"\n          >\n            {calloutElement}\n          </CalloutContainer>\n          )}\n        </div>,\n        document.body,\n      )}\n      {createPortal(children, contentEl)}\n    </>\n  );\n}\n"],"names":["Annotation","latitude","longitude","title","subtitle","accessibilityLabel","size","paddingTop","paddingRight","paddingBottom","paddingLeft","anchorOffsetX","anchorOffsetY","selected","onSelect","onDeselect","onDragStart","onDragEnd","onDragging","animates","appearanceAnimation","visible","clusteringIdentifier","displayPriority","collisionMode","calloutElement","calloutContent","calloutLeftAccessory","calloutRightAccessory","calloutEnabled","calloutOffsetX","calloutOffsetY","draggable","enabled","children","annotation","setAnnotation","useState","contentEl","useMemo","map","useContext","MapContext","useEffect","calloutLeftAccessoryRef","useRef","calloutRightAccessoryRef","calloutContentRef","calloutElementRef","useLayoutEffect","callOutObj","toMapKitDisplayPriority","propertyName","prop","handlerWithoutParameters","name","handler","forwardMapkitEvent","dragEndParameters","draggingParameters","e","a","jsxs","Fragment","createPortal","jsx","CalloutContainer"],"mappings":"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"}