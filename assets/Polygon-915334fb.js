import{r as a}from"./index-f1f749bf.js";import{b as C}from"./Map-1602a87c.js";function r({points:l,visible:s=!0,enabled:p=!0,selected:d=!1,onSelect:u=void 0,onDeselect:m=void 0,lineDash:c=[],lineDashOffset:f=0,lineJoin:h="round",lineWidth:y=1,strokeColor:v="rgb(0, 122, 255)",strokeOpacity:k=1,strokeStart:g=0,strokeEnd:b=1,fillColor:j="rgb(0, 122, 255)",fillOpacity:q=.1,fillRule:V="nonzero"}){const[e,w]=a.useState(null),o=a.useContext(C);return a.useEffect(()=>{if(o===null)return;const t=new mapkit.PolygonOverlay([]);return o.addOverlay(t),w(t),()=>{o.removeOverlay(t)}},[o]),a.useEffect(()=>{if(e===null)return;if(!l||l.length===0){e.points=[];return}const t=n=>n.map(({latitude:i,longitude:E})=>new mapkit.Coordinate(i,E));e.points=Array.isArray(l[0])?l.map(t):t(l)},[e,l]),Object.entries({visible:s,enabled:p,selected:d}).forEach(([t,n])=>{a.useEffect(()=>{e&&(e[t]=n)},[e,n])}),Object.entries({lineDash:c,lineDashOffset:f,lineJoin:h,lineWidth:y,strokeColor:v,strokeOpacity:k,strokeStart:g,strokeEnd:b,fillColor:j,fillOpacity:q,fillRule:V}).forEach(([t,n])=>{a.useEffect(()=>{e&&(e.style[t]=n)},[e,n])}),[{name:"select",handler:u},{name:"deselect",handler:m}].forEach(({name:t,handler:n})=>{a.useEffect(()=>{if(!e||!n)return;const i=()=>n();return e.addEventListener(t,i),()=>e.removeEventListener(t,i)},[e,n])}),null}try{r.displayName="Polygon",r.__docgenInfo={description:"",displayName:"Polygon",props:{points:{defaultValue:null,description:`One or more arrays of coordinates that define the polygon overlay shape.
@see {@link https://developer.apple.com/documentation/mapkitjs/polygonoverlay/2974011-points}`,name:"points",required:!0,type:{name:"Coordinate[] | Coordinate[][]"}},visible:{defaultValue:{value:"true"},description:`A Boolean value that determines whether the polygon is visible.
@see {@link https://developer.apple.com/documentation/mapkitjs/overlay/2974002-visible}`,name:"visible",required:!1,type:{name:"boolean"}},enabled:{defaultValue:{value:"true"},description:`A Boolean value that determines whether the polygon responds to user interaction.
@see {@link https://developer.apple.com/documentation/mapkitjs/overlay/2973997-enabled}`,name:"enabled",required:!1,type:{name:"boolean"}},selected:{defaultValue:{value:"false"},description:`A Boolean value that determines whether the map displays the polygon in a selected state.
@see {@link https://developer.apple.com/documentation/mapkitjs/overlay/2974000-selected}`,name:"selected",required:!1,type:{name:"boolean"}},onSelect:{defaultValue:{value:"undefined"},description:"Event fired when the polygon is selected.",name:"onSelect",required:!1,type:{name:"(() => void)"}},onDeselect:{defaultValue:{value:"undefined"},description:"Event fired when the polygon is deselected.",name:"onDeselect",required:!1,type:{name:"(() => void)"}},lineDash:{defaultValue:{value:"[]"},description:`An array of line and gap lengths for creating a dashed line.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974025-linedash}`,name:"lineDash",required:!1,type:{name:"number[]"}},lineDashOffset:{defaultValue:{value:"0"},description:`The number of CSS pixels to use as an offset when drawing a line’s dash pattern.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974026-linedashoffset}`,name:"lineDashOffset",required:!1,type:{name:"number"}},lineJoin:{defaultValue:{value:"round"},description:`The corner style to apply when joining line segments.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974027-linejoin}`,name:"lineJoin",required:!1,type:{name:"enum",value:[{value:'"round"'},{value:'"miter"'},{value:'"bevel"'}]}},lineWidth:{defaultValue:{value:"1"},description:`The width of a line’s stroke, in CSS pixels.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974028-linewidth}`,name:"lineWidth",required:!1,type:{name:"number"}},strokeColor:{defaultValue:{value:"rgb(0, 122, 255)"},description:`The stroke color of a line.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974030-strokecolor}`,name:"strokeColor",required:!1,type:{name:"string"}},strokeOpacity:{defaultValue:{value:"1"},description:`The opacity of the stroke color.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974031-strokeopacity}`,name:"strokeOpacity",required:!1,type:{name:"number"}},strokeStart:{defaultValue:{value:"0"},description:`The unit distance along the line where a stroke begins.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/3586011-strokestart}`,name:"strokeStart",required:!1,type:{name:"number"}},strokeEnd:{defaultValue:{value:"1"},description:`The unit distance along the line where a stroke ends.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/3586010-strokeend}`,name:"strokeEnd",required:!1,type:{name:"number"}},fillColor:{defaultValue:{value:"rgb(0, 122, 255)"},description:`The fill color of a shape.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974021-fillcolor}`,name:"fillColor",required:!1,type:{name:"string | null"}},fillOpacity:{defaultValue:{value:"0.1"},description:`The opacity of the fill color.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974022-fillopacity}`,name:"fillOpacity",required:!1,type:{name:"number"}},fillRule:{defaultValue:{value:"nonzero"},description:`A rule for determining whether a point is inside or outside a polygon.
@see {@link https://developer.apple.com/documentation/mapkitjs/style/2974023-fillrule}`,name:"fillRule",required:!1,type:{name:"enum",value:[{value:'"nonzero"'},{value:'"evenodd"'}]}}}}}catch{}export{r as P};
//# sourceMappingURL=Polygon-915334fb.js.map
