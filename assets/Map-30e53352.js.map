{"version":3,"file":"Map-30e53352.js","sources":["../../src/context/MapContext.ts","../../src/util/loader.ts","../../src/util/parameters.ts","../../src/components/Map.tsx"],"sourcesContent":["import React from 'react';\n\nexport default React.createContext<mapkit.Map | null>(null);\n","let loadingPromise: Promise<void> | null = null;\n\n/**\n * Loads the MapKit JS API with the given token.\n *\n * If the library is already loaded or loading, this function will not attempt\n * to load it a second time.\n *\n * @param token The MapKit JS token\n * @returns A promise resolving when the library is loaded.\n */\nexport default function load(token: string): Promise<void> {\n  if (loadingPromise !== null) {\n    return loadingPromise;\n  }\n\n  loadingPromise = new Promise((resolve) => {\n    const script = document.createElement('script');\n    script.addEventListener('load', () => {\n      mapkit.init({\n        authorizationCallback: (done) => done(token),\n      });\n\n      resolve();\n    }, { once: true });\n    script.src = 'https://cdn.apple-mapkit.com/mk/5.x.x/mapkit.js';\n    script.crossOrigin = 'anonymous';\n    document.head.appendChild(script);\n  });\n  return loadingPromise;\n}\n","/**\n * Color schemes of the map.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/map/colorschemes}\n */\nexport enum ColorScheme { Light, Dark }\n\n/**\n * Converts a mapkit-react color scheme value to a MapKit JS color scheme value.\n * Must be called after MapKit JS is loaded.\n * @param colorScheme The mapkit-react color scheme value\n * @returns The MapKit JS color scheme value\n */\nexport function toMapKitColorScheme(colorScheme: ColorScheme): string {\n  switch (colorScheme) {\n    case ColorScheme.Dark:\n      return mapkit.Map.ColorSchemes.Dark;\n    case ColorScheme.Light:\n      return mapkit.Map.ColorSchemes.Light;\n    default:\n      throw new RangeError('Invalid color scheme');\n  }\n}\n\n/**\n * Types of map to display.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes}\n */\nexport enum MapType {\n  /**\n   * A street map that shows the position of all roads and some road names.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes/standard}\n   */\n  Standard,\n\n  /**\n   * A street map where your data is emphasized over the underlying map details.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes/mutedstandard}\n   */\n  MutedStandard,\n\n  /**\n   * A satellite image of the area with road and road name information\n   * layered on top.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes/hybrid}\n   */\n  Hybrid,\n\n  /**\n   * A satellite image of the area.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/maptypes/satellite}\n   */\n  Satellite,\n}\n\n/**\n * Converts a mapkit-react map type value to a MapKit JS map type value.\n * Must be called after MapKit JS is loaded.\n * @param mapType The mapkit-react map type value\n * @returns The MapKit JS map type value\n */\nexport function toMapKitMapType(mapType: MapType): string {\n  switch (mapType) {\n    case MapType.Standard:\n      return mapkit.Map.MapTypes.Standard;\n    case MapType.MutedStandard:\n      return mapkit.Map.MapTypes.MutedStandard;\n    case MapType.Hybrid:\n      return mapkit.Map.MapTypes.Hybrid;\n    case MapType.Satellite:\n      return mapkit.Map.MapTypes.Satellite;\n    default:\n      throw new RangeError('Invalid map type');\n  }\n}\n\n/**\n * Converts a MapKit JS region value to a mapkit-react region value.\n * @param region The MapKit JS region value\n * @returns The mapkit-react region value\n */\nexport function fromMapKitRegion(region: mapkit.CoordinateRegion): CoordinateRegion {\n  return {\n    centerLatitude: region.center.latitude,\n    centerLongitude: region.center.longitude,\n    latitudeDelta: region.span.latitudeDelta,\n    longitudeDelta: region.span.longitudeDelta,\n  };\n}\n\n/**\n * Converts a MapKit JS map type value to a mapkit-react map type value.\n * Must be called after MapKit JS is loaded.\n * @param mapType The MapKit JS map type value\n * @returns The mapkit-react map type value\n */\nexport function fromMapKitMapType(mapType: string): MapType {\n  switch (mapType) {\n    case mapkit.Map.MapTypes.Standard:\n      return MapType.Standard;\n    case mapkit.Map.MapTypes.MutedStandard:\n      return MapType.MutedStandard;\n    case mapkit.Map.MapTypes.Hybrid:\n      return MapType.Hybrid;\n    case mapkit.Map.MapTypes.Satellite:\n      return MapType.Satellite;\n    default:\n      throw new RangeError('Invalid map type');\n  }\n}\n\n/**\n * System of measurement that displays on the map.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/map/distances}\n */\nexport enum Distances {\n  /**\n   * The measurement system is adaptive, and determined based on the map's language.\n   */\n  Adaptive,\n  Metric,\n  Imperial,\n}\n\n/**\n * Converts a mapkit-react map distances to a MapKit JS map distances.\n * Must be called after MapKit JS is loaded.\n * @param distances The mapkit-react map distances\n * @returns The MapKit JS map distances\n */\nexport function toMapKitDistances(distances: Distances): string {\n  switch (distances) {\n    case Distances.Adaptive:\n      return mapkit.Map.Distances.Adaptive;\n    case Distances.Metric:\n      return mapkit.Map.Distances.Metric;\n    case Distances.Imperial:\n      return mapkit.Map.Distances.Imperial;\n    default:\n      throw new RangeError('Invalid distances value');\n  }\n}\n\n/**\n * A value MapKit JS uses for prioritizing the visibility of specific map features\n * before the underlaying map tiles.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/mapconstructoroptions/4096368-loadpriority}\n */\nexport enum LoadPriority {\n  /**\n   * Prioritizes loading of the map land cover and borders, without POIs or labels.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/loadpriorities/landcover}\n   */\n  LandCover,\n\n  /**\n   * Prioritizes loading of the full standard map, with rendered POIs.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/loadpriorities/pointsofinterest}\n   */\n  PointsOfInterest,\n\n  /**\n   * Signifies no preferences over what to prioritize when loading the map.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/map/loadpriorities/none}\n   */\n  None,\n}\n\n/**\n * Converts a mapkit-react load priority to a MapKit JS load priority.\n * Must be called after MapKit JS is loaded.\n * @param mapPriority The mapkit-react load priority\n * @returns The MapKit JS load priority\n */\nexport function toMapKitLoadPriority(loadPriority: LoadPriority): string | null {\n  switch (loadPriority) {\n    case LoadPriority.LandCover:\n      // @ts-ignore\n      return mapkit.Map.LoadPriorities.LandCover;\n    case LoadPriority.PointsOfInterest:\n      // @ts-ignore\n      return mapkit.Map.LoadPriorities.PointsOfInterest;\n    case LoadPriority.None:\n      // @ts-ignore\n      return mapkit.Map.LoadPriorities.None;\n    default:\n      throw new RangeError('Invalid load priority');\n  }\n}\n\n/**\n * Constants indicating the visibility of different adaptive map features.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/featurevisibility}\n */\nexport enum FeatureVisibility {\n  /**\n   * A constant indicating that the feature is always hidden.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/featurevisibility/hidden}\n   */\n  Hidden,\n\n  /**\n   * A constant indicating that the feature is always visible.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/featurevisibility/visible}\n   */\n  Visible,\n\n  /**\n   * A constant indicating that feature visibility adapts to the current map state.\n   * @see {@link https://developer.apple.com/documentation/mapkitjs/featurevisibility/adaptive}\n   */\n  Adaptive,\n}\n\n/**\n * Converts a mapkit-react visibility to a MapKit JS visibility.\n * Must be called after MapKit JS is loaded.\n * @param featureVisibility The mapkit-react visibility\n * @returns The MapKit JS visibility\n */\nexport function toMapKitFeatureVisibility(featureVisibility: FeatureVisibility): string {\n  switch (featureVisibility) {\n    case FeatureVisibility.Adaptive:\n      return mapkit.FeatureVisibility.Adaptive;\n    case FeatureVisibility.Visible:\n      return mapkit.FeatureVisibility.Visible;\n    case FeatureVisibility.Hidden:\n      return mapkit.FeatureVisibility.Hidden;\n    default:\n      throw new RangeError('Invalid feature visibility');\n  }\n}\n\n/**\n * Point-of-interest categories.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/mapkit/pointofinterestcategory}\n */\nexport enum PointOfInterestCategory {\n  Airport, AmusementPark, Aquarium, ATM, Bakery, Bank, Beach, Brewery, Cafe,\n  Campground, CarRental, EVCharger, FireStation, FitnessCenter, FoodMarket,\n  GasStation, Hospital, Hotel, Laundry, Library, Marina, MovieTheater, Museum,\n  NationalPark, Nightlife, Park, Parking, Pharmacy, Police, PostOffice,\n  PublicTransport, Restaurant, Restroom, School, Stadium, Store, Theater,\n  University, Winery, Zoo,\n}\n\n/**\n * Converts a mapkit-react POI category value to a MapKit JS POI category value.\n * Must be called after MapKit JS is loaded.\n * @param category The mapkit-react point of interest category value\n * @returns The MapKit JS point of interest category value\n */\nexport function toMapKitPOICategory(category: PointOfInterestCategory):\nmapkit.PointOfInterestCategory {\n  switch (category) {\n    case PointOfInterestCategory.Airport:\n      return mapkit.PointOfInterestCategory.Airport;\n    case PointOfInterestCategory.AmusementPark:\n      return mapkit.PointOfInterestCategory.AmusementPark;\n    case PointOfInterestCategory.Aquarium:\n      return mapkit.PointOfInterestCategory.Aquarium;\n    case PointOfInterestCategory.ATM:\n      return mapkit.PointOfInterestCategory.ATM;\n    case PointOfInterestCategory.Bakery:\n      return mapkit.PointOfInterestCategory.Bakery;\n    case PointOfInterestCategory.Bank:\n      return mapkit.PointOfInterestCategory.Bank;\n    case PointOfInterestCategory.Beach:\n      return mapkit.PointOfInterestCategory.Beach;\n    case PointOfInterestCategory.Brewery:\n      return mapkit.PointOfInterestCategory.Brewery;\n    case PointOfInterestCategory.Cafe:\n      return mapkit.PointOfInterestCategory.Cafe;\n    case PointOfInterestCategory.Campground:\n      return mapkit.PointOfInterestCategory.Campground;\n    case PointOfInterestCategory.CarRental:\n      return mapkit.PointOfInterestCategory.CarRental;\n    case PointOfInterestCategory.EVCharger:\n      return mapkit.PointOfInterestCategory.EVCharger;\n    case PointOfInterestCategory.FireStation:\n      return mapkit.PointOfInterestCategory.FireStation;\n    case PointOfInterestCategory.FitnessCenter:\n      return mapkit.PointOfInterestCategory.FitnessCenter;\n    case PointOfInterestCategory.FoodMarket:\n      return mapkit.PointOfInterestCategory.FoodMarket;\n    case PointOfInterestCategory.GasStation:\n      return mapkit.PointOfInterestCategory.GasStation;\n    case PointOfInterestCategory.Hospital:\n      return mapkit.PointOfInterestCategory.Hospital;\n    case PointOfInterestCategory.Hotel:\n      return mapkit.PointOfInterestCategory.Hotel;\n    case PointOfInterestCategory.Laundry:\n      return mapkit.PointOfInterestCategory.Laundry;\n    case PointOfInterestCategory.Library:\n      return mapkit.PointOfInterestCategory.Library;\n    case PointOfInterestCategory.Marina:\n      return mapkit.PointOfInterestCategory.Marina;\n    case PointOfInterestCategory.MovieTheater:\n      return mapkit.PointOfInterestCategory.MovieTheater;\n    case PointOfInterestCategory.Museum:\n      return mapkit.PointOfInterestCategory.Museum;\n    case PointOfInterestCategory.NationalPark:\n      return mapkit.PointOfInterestCategory.NationalPark;\n    case PointOfInterestCategory.Nightlife:\n      return mapkit.PointOfInterestCategory.Nightlife;\n    case PointOfInterestCategory.Park:\n      return mapkit.PointOfInterestCategory.Park;\n    case PointOfInterestCategory.Parking:\n      return mapkit.PointOfInterestCategory.Parking;\n    case PointOfInterestCategory.Pharmacy:\n      return mapkit.PointOfInterestCategory.Pharmacy;\n    case PointOfInterestCategory.Police:\n      return mapkit.PointOfInterestCategory.Police;\n    case PointOfInterestCategory.PostOffice:\n      return mapkit.PointOfInterestCategory.PostOffice;\n    case PointOfInterestCategory.PublicTransport:\n      return mapkit.PointOfInterestCategory.PublicTransport;\n    case PointOfInterestCategory.Restaurant:\n      return mapkit.PointOfInterestCategory.Restaurant;\n    case PointOfInterestCategory.Restroom:\n      return mapkit.PointOfInterestCategory.Restroom;\n    case PointOfInterestCategory.School:\n      return mapkit.PointOfInterestCategory.School;\n    case PointOfInterestCategory.Stadium:\n      return mapkit.PointOfInterestCategory.Stadium;\n    case PointOfInterestCategory.Store:\n      return mapkit.PointOfInterestCategory.Store;\n    case PointOfInterestCategory.Theater:\n      return mapkit.PointOfInterestCategory.Theater;\n    case PointOfInterestCategory.University:\n      return mapkit.PointOfInterestCategory.University;\n    case PointOfInterestCategory.Winery:\n      return mapkit.PointOfInterestCategory.Winery;\n    case PointOfInterestCategory.Zoo:\n      return mapkit.PointOfInterestCategory.Zoo;\n    default:\n      throw new RangeError('Invalid point of interest category');\n  }\n}\n\n/**\n * A point on the Earth’s surface.\n */\nexport interface Coordinate {\n  /**\n   * The latitude in degrees.\n   */\n  latitude: number;\n\n  /**\n   * The longitude in degrees.\n   */\n  longitude: number;\n}\n\n/**\n * A rectangular geographic region that centers around a latitude and longitude coordinate.\n * @see {@link https://developer.apple.com/documentation/mapkitjs/mapkit/coordinateregion/2973861-mapkit_coordinateregion}\n */\nexport interface CoordinateRegion {\n  /**\n   * The latitude of the center point in degrees.\n   */\n  centerLatitude: number;\n\n  /**\n   * The longitude of the center point in degrees.\n   */\n  centerLongitude: number;\n\n  /**\n   * The amount of north-to-south distance (in degrees) to display for the map\n   * region. Unlike longitudinal distances, which vary based on the latitude,\n   * one degree of latitude is always approximately 111 km (69 mi.).\n   */\n  latitudeDelta: number;\n\n  /**\n   * The amount of east-to-west distance (in degrees) to display for the map\n   * region. The number of kilometers (or miles) that a longitude range spans\n   * varies based on the latitude. For example, one degree of longitude spans\n   * a distance of approximately 111 km (69 miles mi.) at the equator,\n   * approximately 88 km (or 55mi.) at 37º north latitude (the latitude of\n   * San Francisco), and shrinks to 0 km (0 mi.) at the poles.\n   */\n  longitudeDelta: number;\n}\n\n/**\n * Converts a mapkit-react coordinate region to a MapKit JS coordinate region.\n * Must be called after MapKit JS is loaded.\n * @param region The mapkit-react coordinate region\n * @returns The MapKit JS coordinate region\n */\nexport function toMapKitCoordinateRegion(region: CoordinateRegion) : mapkit.CoordinateRegion {\n  return new mapkit.CoordinateRegion(\n    new mapkit.Coordinate(region.centerLatitude, region.centerLongitude),\n    new mapkit.CoordinateSpan(region.latitudeDelta, region.longitudeDelta),\n  );\n}\n","import React, {\n  useState, useEffect, useRef, useImperativeHandle,\n} from 'react';\nimport MapContext from '../context/MapContext';\nimport load from '../util/loader';\nimport {\n  ColorScheme, Distances, FeatureVisibility, LoadPriority, MapType,\n  fromMapKitMapType,\n  toMapKitColorScheme, toMapKitCoordinateRegion, toMapKitDistances,\n  toMapKitLoadPriority, toMapKitMapType, toMapKitPOICategory,\n  toMapKitFeatureVisibility, fromMapKitRegion,\n} from '../util/parameters';\nimport MapProps from './MapProps';\n\n/**\n * Forwards a given MapKit JS event to a mapkit-react event.\n * @param map The current map instance\n * @param name The name of the MapKit JS event.\n * @param handler The event handler of the mapkit-react Map component\n * @param eventMap A function that transforms the parameter of the\n *                 MapKit JS event handler to a parameter for the\n *                 mapkit-react event handler.\n */\nfunction forwardMapkitEvent<E>(\n  map: mapkit.Map | null,\n  name: String,\n  handler: ((mapkitReactEvent: E) => void) | undefined,\n  eventMap: (mapkitEvent: any) => E,\n) {\n  useEffect(() => {\n    if (!map || !handler) return undefined;\n\n    // @ts-ignore\n    const mapkitHandler = (e) => {\n      handler(eventMap(e));\n    };\n\n    // @ts-ignore\n    map.addEventListener(name, mapkitHandler);\n    // @ts-ignore\n    return () => map.removeEventListener(name, mapkitHandler);\n  }, [map, handler]);\n}\n\nconst Map = React.forwardRef<mapkit.Map | null, React.PropsWithChildren<MapProps>>(({\n  children = undefined,\n\n  load: customLoad,\n  token,\n\n  colorScheme = ColorScheme.Light,\n  mapType = MapType.Standard,\n  distances = Distances.Adaptive,\n  loadPriority = LoadPriority.LandCover,\n\n  isRotationEnabled = true,\n  isScrollEnabled = true,\n  isZoomEnabled = true,\n  showsCompass = FeatureVisibility.Adaptive,\n  showsScale = FeatureVisibility.Hidden,\n  showsMapTypeControl = true,\n  showsZoomControl = true,\n  showsUserLocationControl = false,\n  showsPointsOfInterest = true,\n  showsUserLocation = false,\n  tracksUserLocation = false,\n  allowWheelToZoom = false,\n\n  includedPOICategories = undefined,\n  excludedPOICategories = undefined,\n\n  paddingTop = 0,\n  paddingRight = 0,\n  paddingBottom = 0,\n  paddingLeft = 0,\n\n  initialRegion = undefined,\n  cameraBoundary = undefined,\n  minCameraDistance = 0,\n  maxCameraDistance = Infinity,\n\n  onLoad = undefined,\n\n  onRegionChangeStart = undefined,\n  onRegionChangeEnd = undefined,\n  onMapTypeChange = undefined,\n\n  onSingleTap = undefined,\n  onDoubleTap = undefined,\n  onLongPress = undefined,\n\n  onUserLocationChange = undefined,\n  onUserLocationError = undefined,\n\n  onClick = undefined,\n  onMouseMove = undefined,\n  onMouseDown = undefined,\n  onMouseUp = undefined,\n}, mapRef) => {\n  const [map, setMap] = useState<mapkit.Map | null>(null);\n  const element = useRef<HTMLDivElement>(null);\n  const exists = useRef<boolean>(false);\n\n  // Load the map\n  useEffect(() => {\n    const loadMap = typeof customLoad === 'function' ? customLoad : load;\n    loadMap(token).then(() => {\n      if (exists.current) return;\n      const options = initialRegion\n        ? { region: toMapKitCoordinateRegion(initialRegion) }\n        : {};\n      setMap(new mapkit.Map(element.current!, options));\n      exists.current = true;\n    });\n\n    return () => {\n      if (map) {\n        map.destroy();\n        exists.current = false;\n      }\n    };\n  }, []);\n\n  // Fire the `onLoad` event\n  useEffect(() => {\n    if (map !== null) {\n      onLoad?.();\n    }\n  }, [map]);\n\n  // Expose the map using a forward ref\n  useImperativeHandle(mapRef, () => map!, [map]);\n\n  // Enum properties\n  useEffect(() => {\n    if (!map) return;\n    map.colorScheme = toMapKitColorScheme(colorScheme);\n  }, [map, colorScheme]);\n  useEffect(() => {\n    if (!map) return;\n    map.mapType = toMapKitMapType(mapType);\n  }, [map, mapType]);\n  useEffect(() => {\n    if (!map) return;\n    map.distances = toMapKitDistances(distances);\n  }, [map, distances]);\n  useEffect(() => {\n    if (!map) return;\n    // @ts-ignore\n    map.loadPriority = toMapKitLoadPriority(loadPriority);\n  }, [map, loadPriority]);\n\n  // Simple values properties\n  const booleanProperties = {\n    isRotationEnabled,\n    isScrollEnabled,\n    isZoomEnabled,\n    showsMapTypeControl,\n    showsZoomControl,\n    showsUserLocationControl,\n    showsPointsOfInterest,\n    showsUserLocation,\n    tracksUserLocation,\n  };\n  Object.entries(booleanProperties).forEach(([propertyName, prop]) => {\n    useEffect(() => {\n      if (!map) return;\n      // @ts-ignore\n      map[propertyName] = prop;\n    }, [map, prop]);\n  });\n\n  // Feature visibility properties\n  const featureVisibilityProperties = {\n    showsCompass,\n    showsScale,\n  };\n  Object.entries(featureVisibilityProperties).forEach(([propertyName, prop]) => {\n    useEffect(() => {\n      if (!map) return;\n      // @ts-ignore\n      map[propertyName] = toMapKitFeatureVisibility(prop);\n    }, [map, prop]);\n  });\n\n  // Experimental feature\n  useEffect(() => {\n    if (!map) return;\n    try {\n      // @ts-ignore\n      // eslint-disable-next-line no-underscore-dangle\n      map._allowWheelToZoom = allowWheelToZoom;\n    } catch { /* ignore errors */ }\n  }, [map, allowWheelToZoom]);\n\n  // Padding\n  useEffect(() => {\n    if (!map) return;\n    map.padding = new mapkit.Padding(paddingTop, paddingRight, paddingBottom, paddingLeft);\n  }, [map, paddingTop, paddingRight, paddingBottom, paddingLeft]);\n\n  // Camera boundary\n  useEffect(() => {\n    if (!map) return;\n    // @ts-ignore\n    map.cameraBoundary = cameraBoundary ? toMapKitCoordinateRegion(cameraBoundary) : null;\n  }, [map, cameraBoundary]);\n\n  // Camera zoom range\n  useEffect(() => {\n    if (!map) return;\n    // @ts-ignore\n    map.cameraZoomRange = new mapkit.CameraZoomRange(minCameraDistance, maxCameraDistance);\n  }, [map, minCameraDistance, maxCameraDistance]);\n\n  // Point of interest filter\n  useEffect(() => {\n    if (!map) return;\n\n    if (includedPOICategories && excludedPOICategories) {\n      throw new Error('Can’t specify both includedPOICategories and excludedPOICategories.');\n    } else if (includedPOICategories) {\n      map.pointOfInterestFilter = mapkit.PointOfInterestFilter.including(\n        includedPOICategories.map(toMapKitPOICategory),\n      );\n    } else if (excludedPOICategories) {\n      map.pointOfInterestFilter = mapkit.PointOfInterestFilter.excluding(\n        excludedPOICategories.map(toMapKitPOICategory),\n      );\n    } else {\n      // @ts-ignore\n      map.pointOfInterestFilter = null;\n    }\n  }, [map, includedPOICategories, excludedPOICategories]);\n\n  // MapKit JS events\n  const regionHandler = () => fromMapKitRegion(map!.region);\n  forwardMapkitEvent(map, 'region-change-start', onRegionChangeStart, regionHandler);\n  forwardMapkitEvent(map, 'region-change-end', onRegionChangeEnd, regionHandler);\n  forwardMapkitEvent(map, 'map-type-change', onMapTypeChange, () => fromMapKitMapType(map!.mapType));\n\n  type MapKitMapInteractionEvent = {\n    domEvents: Event[],\n    pointOnPage: DOMPoint,\n  };\n  const interactionEvent = ({ domEvents, pointOnPage }: MapKitMapInteractionEvent) => ({\n    domEvents,\n    pointOnPage,\n    toCoordinates: () => map!.convertPointOnPageToCoordinate(pointOnPage),\n  });\n  forwardMapkitEvent(map, 'single-tap', onSingleTap, interactionEvent);\n  forwardMapkitEvent(map, 'double-tap', onDoubleTap, interactionEvent);\n  forwardMapkitEvent(map, 'long-press', onLongPress, interactionEvent);\n\n  type MapKitUserLocationChangeEvent = {\n    coordinate: mapkit.Coordinate,\n    timestamp: Date,\n    floorLevel: number | undefined | null,\n  };\n  forwardMapkitEvent(map, 'user-location-change', onUserLocationChange, ({ coordinate: { latitude, longitude }, timestamp, floorLevel }: MapKitUserLocationChangeEvent) => ({\n    coordinate: { latitude, longitude },\n    timestamp,\n    floorLevel,\n  }));\n  type MapKitUserLocationErrorEvent = {\n    code: 1 | 2 | 3 | 4,\n    message: string,\n  };\n  forwardMapkitEvent(map, 'user-location-error', onUserLocationError, ({ code, message }: MapKitUserLocationErrorEvent) => ({ code, message }));\n\n  // Native JavaScript events\n  const domEvents = [\n    { name: 'click', handler: onClick },\n    { name: 'mousemove', handler: onMouseMove },\n    { name: 'mousedown', handler: onMouseDown },\n    { name: 'mouseup', handler: onMouseUp },\n  ] as const;\n  domEvents.forEach(({ name, handler }) => {\n    useEffect(() => {\n      if (!map || !handler) return undefined;\n\n      const listener = (e: MouseEvent) => {\n        handler({\n          domEvents: [e],\n          pointOnPage: { x: e.pageX, y: e.pageY },\n          toCoordinates() {\n            const { latitude, longitude }: mapkit.Coordinate = map\n              .convertPointOnPageToCoordinate(new DOMPoint(e.pageX, e.pageY));\n            return { latitude, longitude };\n          },\n        });\n      };\n\n      element.current?.addEventListener(name, listener);\n      return () => element.current?.removeEventListener(name, listener);\n    }, [map, handler]);\n  });\n\n  return (\n    <React.StrictMode>\n      <div style={{ width: '100%', height: '100%' }} ref={element}>\n        <MapContext.Provider value={map}>\n          {children}\n        </MapContext.Provider>\n      </div>\n    </React.StrictMode>\n  );\n});\nexport default Map;\n"],"names":["MapContext","React","loadingPromise","load","token","resolve","script","done","ColorScheme","ColorScheme2","toMapKitColorScheme","colorScheme","MapType","MapType2","toMapKitMapType","mapType","fromMapKitRegion","region","fromMapKitMapType","Distances","Distances2","toMapKitDistances","distances","LoadPriority","LoadPriority2","toMapKitLoadPriority","loadPriority","FeatureVisibility","FeatureVisibility2","toMapKitFeatureVisibility","featureVisibility","PointOfInterestCategory","PointOfInterestCategory2","toMapKitPOICategory","category","toMapKitCoordinateRegion","forwardMapkitEvent","map","name","handler","eventMap","useEffect","mapkitHandler","e","Map","children","customLoad","isRotationEnabled","isScrollEnabled","isZoomEnabled","showsCompass","showsScale","showsMapTypeControl","showsZoomControl","showsUserLocationControl","showsPointsOfInterest","showsUserLocation","tracksUserLocation","allowWheelToZoom","includedPOICategories","excludedPOICategories","paddingTop","paddingRight","paddingBottom","paddingLeft","initialRegion","cameraBoundary","minCameraDistance","maxCameraDistance","onLoad","onRegionChangeStart","onRegionChangeEnd","onMapTypeChange","onSingleTap","onDoubleTap","onLongPress","onUserLocationChange","onUserLocationError","onClick","onMouseMove","onMouseDown","onMouseUp","mapRef","setMap","useState","element","useRef","exists","options","useImperativeHandle","propertyName","prop","regionHandler","interactionEvent","domEvents2","pointOnPage","latitude","longitude","timestamp","floorLevel","code","message","listener","_a","jsx","Map$1"],"mappings":"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"}