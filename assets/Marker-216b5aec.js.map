{"version":3,"file":"Marker-216b5aec.js","sources":["../../src/components/Marker.tsx"],"sourcesContent":["import React, {\n  useContext, useEffect, useRef, useState,\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport MapContext from '../context/MapContext';\nimport { FeatureVisibility, toMapKitDisplayPriority, toMapKitFeatureVisibility } from '../util/parameters';\nimport MarkerProps from './MarkerProps';\nimport forwardMapkitEvent from '../util/forwardMapkitEvent';\nimport CalloutContainer from './CalloutContainer';\n\nexport default function Marker({\n  latitude,\n  longitude,\n\n  title = '',\n  subtitle = '',\n  accessibilityLabel = null,\n  subtitleVisibility = FeatureVisibility.Adaptive,\n  titleVisibility = FeatureVisibility.Adaptive,\n\n  clusteringIdentifier = null,\n  displayPriority = undefined,\n  collisionMode = undefined,\n\n  color = '#ff5b40',\n  glyphColor = 'white',\n  glyphText = '',\n  glyphImage = null,\n  selectedGlyphImage = null,\n\n  paddingTop = 0,\n  paddingRight = 0,\n  paddingBottom = 0,\n  paddingLeft = 0,\n  anchorOffsetX = 0,\n  anchorOffsetY = 0,\n\n  calloutElement = undefined,\n  calloutContent = undefined,\n  calloutLeftAccessory = undefined,\n  calloutRightAccessory = undefined,\n\n  calloutEnabled = undefined,\n  calloutOffsetX = 0,\n  calloutOffsetY = 0,\n\n  selected = false,\n  animates = true,\n  appearanceAnimation = '',\n  visible = true,\n\n  draggable = false,\n  enabled = true,\n\n  onSelect = undefined,\n  onDeselect = undefined,\n  onDragStart = undefined,\n  onDragEnd = undefined,\n  onDragging = undefined,\n}: MarkerProps) {\n  const [marker, setMarker] = useState<mapkit.MarkerAnnotation | null>(null);\n  const map = useContext(MapContext);\n\n  // Coordinates\n  useEffect(() => {\n    if (map === null) return undefined;\n\n    const m = new mapkit.MarkerAnnotation(\n      new mapkit.Coordinate(latitude, longitude),\n    );\n    map.addAnnotation(m);\n    setMarker(m);\n\n    return () => {\n      map.removeAnnotation(m);\n    };\n  }, [map, latitude, longitude]);\n\n  // Enum properties\n  useEffect(() => {\n    if (!marker) return;\n    marker.subtitleVisibility = toMapKitFeatureVisibility(subtitleVisibility);\n  }, [marker, subtitleVisibility]);\n  useEffect(() => {\n    if (!marker) return;\n    marker.titleVisibility = toMapKitFeatureVisibility(titleVisibility);\n  }, [marker, titleVisibility]);\n\n  // Padding\n  useEffect(() => {\n    if (!marker) return;\n    marker.padding = new mapkit.Padding(paddingTop, paddingRight, paddingBottom, paddingLeft);\n  }, [marker, paddingTop, paddingRight, paddingBottom, paddingLeft]);\n\n  // AnchorOffset\n  useEffect(() => {\n    if (!marker) return;\n    marker.anchorOffset = new DOMPoint(anchorOffsetX, anchorOffsetY);\n  }, [marker, anchorOffsetX, anchorOffsetY]);\n\n  // CalloutOffset\n  useEffect(() => {\n    if (!marker) return;\n    marker.calloutOffset = new DOMPoint(calloutOffsetX, calloutOffsetY);\n  }, [marker, calloutOffsetX, calloutOffsetY]);\n\n  const calloutLeftAccessoryRef = useRef<HTMLDivElement>(null);\n  const calloutRightAccessoryRef = useRef<HTMLDivElement>(null);\n  const calloutContentRef = useRef<HTMLDivElement>(null);\n  const calloutElementRef = useRef<HTMLDivElement>(null);\n\n  // Callout\n  useEffect(() => {\n    if (!marker) return;\n\n    const callOutObj: mapkit.AnnotationCalloutDelegate = {};\n    if (calloutElement && calloutElementRef.current !== null) {\n      // @ts-expect-error\n      callOutObj.calloutElementForAnnotation = () => calloutElementRef.current;\n    }\n    if (\n      calloutLeftAccessory\n      && calloutLeftAccessoryRef.current !== null\n    ) {\n      // @ts-expect-error\n      callOutObj.calloutLeftAccessoryForAnnotation = () => calloutLeftAccessoryRef\n        .current;\n    }\n    if (\n      calloutRightAccessory\n      && calloutRightAccessoryRef.current !== null\n    ) {\n      // @ts-expect-error\n      callOutObj.calloutRightAccessoryForAnnotation = () => calloutRightAccessoryRef\n        .current;\n    }\n    if (calloutContent && calloutContentRef.current !== null) {\n      // @ts-expect-error\n      callOutObj.calloutContentForAnnotation = () => calloutContentRef.current;\n    }\n    if (Object.keys(callOutObj).length > 0) {\n      marker.callout = callOutObj;\n    } else {\n      // @ts-expect-error\n      delete marker.callout;\n    }\n  }, [\n    marker,\n    calloutElement,\n    calloutLeftAccessory,\n    calloutRightAccessory,\n    calloutContent,\n    calloutElementRef.current,\n    calloutLeftAccessoryRef.current,\n    calloutRightAccessoryRef.current,\n    calloutContentRef.current,\n  ]);\n\n  // Collision Mode\n  useEffect(() => {\n    if (!marker) return;\n\n    if (collisionMode === 'Circle') {\n      marker.collisionMode = mapkit.MarkerAnnotation.CollisionMode.Circle;\n    } else if (collisionMode === 'Rectangle') {\n      marker.collisionMode = mapkit.MarkerAnnotation.CollisionMode.Rectangle;\n    } else {\n      // @ts-ignore\n      delete marker.collisionMode;\n    }\n  }, [marker, collisionMode]);\n\n  // Display Priority\n  useEffect(() => {\n    if (!marker) return;\n    // @ts-ignore\n    if (displayPriority === undefined) { delete marker.displayPriority; return; }\n    // @ts-ignore\n    marker.displayPriority = toMapKitDisplayPriority(displayPriority);\n  }, [marker, displayPriority]);\n\n  // Simple values properties\n  const properties = {\n    title,\n    subtitle,\n    accessibilityLabel,\n\n    color,\n    glyphColor,\n\n    glyphText,\n    glyphImage,\n    selectedGlyphImage,\n\n    clusteringIdentifier,\n\n    selected,\n    animates,\n    appearanceAnimation,\n    draggable,\n    enabled,\n    visible,\n\n    calloutEnabled,\n  };\n  Object.entries(properties).forEach(([propertyName, prop]) => {\n    useEffect(() => {\n      if (!marker) return;\n      // @ts-ignore\n      if (prop === undefined) { delete marker[propertyName]; return; }\n      // @ts-ignore\n      marker[propertyName] = prop;\n    }, [marker, prop]);\n  });\n\n  // Events\n  const handlerWithoutParameters = () => { };\n  const events = [\n    { name: 'select', handler: onSelect },\n    { name: 'deselect', handler: onDeselect },\n    { name: 'drag-start', handler: onDragStart },\n  ] as const;\n  events.forEach(({ name, handler }) => {\n    forwardMapkitEvent(marker, name, handler, handlerWithoutParameters);\n  });\n\n  const dragEndParameters = () => ({\n    latitude: marker!.coordinate.latitude,\n    longitude: marker!.coordinate.longitude,\n  });\n  const draggingParameters = (e: { coordinate: mapkit.Coordinate }) => ({\n    latitude: e.coordinate.latitude,\n    longitude: e.coordinate.longitude,\n  });\n  forwardMapkitEvent(marker, 'drag-end', onDragEnd, dragEndParameters);\n  forwardMapkitEvent(marker, 'dragging', onDragging, draggingParameters);\n\n  if (calloutEnabled) {\n    return (\n      <>\n        {calloutContent !== undefined && createPortal(\n          <CalloutContainer\n            ref={calloutContentRef}\n            type=\"content\"\n          >\n            {calloutContent}\n          </CalloutContainer>,\n          document.body,\n        )}\n        {calloutLeftAccessory !== undefined && createPortal(\n          <CalloutContainer\n            ref={calloutLeftAccessoryRef}\n            type=\"left\"\n          >\n            {calloutLeftAccessory}\n          </CalloutContainer>,\n          document.body,\n        )}\n        {calloutRightAccessory !== undefined && createPortal(\n          <CalloutContainer\n            ref={calloutRightAccessoryRef}\n            type=\"right\"\n          >\n            {calloutRightAccessory}\n          </CalloutContainer>,\n          document.body,\n        )}\n        {calloutElement !== undefined && createPortal(\n          <CalloutContainer\n            ref={calloutElementRef}\n            type=\"container\"\n          >\n            {calloutElement}\n          </CalloutContainer>,\n          document.body,\n        )}\n      </>\n    );\n  }\n  return null;\n}\n"],"names":["Marker","latitude","longitude","title","subtitle","accessibilityLabel","subtitleVisibility","FeatureVisibility","titleVisibility","clusteringIdentifier","displayPriority","collisionMode","color","glyphColor","glyphText","glyphImage","selectedGlyphImage","paddingTop","paddingRight","paddingBottom","paddingLeft","anchorOffsetX","anchorOffsetY","calloutElement","calloutContent","calloutLeftAccessory","calloutRightAccessory","calloutEnabled","calloutOffsetX","calloutOffsetY","selected","animates","appearanceAnimation","visible","draggable","enabled","onSelect","onDeselect","onDragStart","onDragEnd","onDragging","marker","setMarker","useState","map","useContext","MapContext","useEffect","m","toMapKitFeatureVisibility","calloutLeftAccessoryRef","useRef","calloutRightAccessoryRef","calloutContentRef","calloutElementRef","callOutObj","toMapKitDisplayPriority","propertyName","prop","handlerWithoutParameters","name","handler","forwardMapkitEvent","dragEndParameters","draggingParameters","e","jsxs","Fragment","createPortal","jsx","CalloutContainer"],"mappings":"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"}